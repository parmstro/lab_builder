---
# This set of tasks generates the IdM certs for the host using IdM
# The host is required to be an IdM client first
#

- name: Create the directory to contain the certificates
  file:
    state: directory
    path: /etc/ipa/private/

- name: Re-initialize the key space
  command: "rm -f /etc/ipa/private/*"

- name: Initialize the admin user
  command: "echo {{ idm_admin }} | kinit admin"

- name: Generate a private key
  openssl_privatekey:
    path: "{{ ipa_server_prv_file }}"
    passphrase: "{{ ipa_rsa_key_pass }}"
    cipher: "DES3"
    force: yes

# Unfortunately, we need PyOpenSLL 0.15 or better
# to generate CSRs with this module, which is 
# not avaiable on base RHEL 7 and because it is
# a distutils installed module in python it won't 
# upgrade cleanly. SO ... we wait and work around
#
#- name: Generate the CSR with subjectAltNames set
#  openssl_csr:
#    path: "{{ ipa_server_csr_file }}"
#    privatekey_path: "{{ ipa_server_prv_file }}"
#    privatekey_passphrase: "{{ ipa_rsa_key_pass }}"
#    state: present
#    common_name: "{{ ansible_fqdn }}"
#    subject_alt_name: "DNS:{{ ansible_fqdn }}"
#    organization_name: "{{ ipa_organization_name }}"
#    organizational_unit_name: "{{ ipa_ou_name }}"
#    locality_name: "{{ ipa_locality_name }}"
#    state_or_province_name: "{{ ipa_prov_name }}"
#    country_name: "{{ ipa_country_name }}"
#    email_address: "{{ ipa_email_address }}"

# There are those time where we know why someone invented
# Vice-Grips...
- name: Generate the CSR with subjectAltNames set
  command: "openssl req -new -key '{{ ipa_server_prv_file }}' -out '{{ ipa_server_csr_file }}' -subj '/C={{ ipa_country_name }}/ST={{ ipa_prov_name }}/L={{ ipa_locality_name }}/O={{ ipa_organization_name }}/OU={{ ipa_ou_name }}/CN={{ ansible_fqdn }}/subjectAltName={{ ansible_fqdn }}'"

- name: Determine if the service exists
  command: "ipa service-show {{ ipa_service_type }}/{{ ansible_fqdn }}"
  register: result

- set_fact:
    service_exists: "{{ result.stdout_lines.1 | regex_search('service not found') }}"

- name: Add the service to IdM/FreeIPA
  command: "ipa service-add {{ ipa_service_type }}/{{ ansible_fqdn }}"
  when: service_exists != ""

- name: Request the certificate
  command: "ipa cert-request --add --principal={{ ipa_service_type }}/{{ ansible_fqdn }} {{ ipa_server_csr_file }}"
  register: result

- name: Get the certificate serial number
  set_fact: 
    serial_number: "{{ result.stdout_lines.7 | regex_replace('  Serial number: ', '') }}"

- name: Retrieve the certificate
  command: "ipa cert-show --out={{ ipa_server_crt_file }} {{ serial_number }}"

- lineinfile:
    path: "{{ ipa_server_certs_dir }}.passin.txt"
    line: "{{ ipa_rsa_key_pass }}"
    create: yes
    owner: root
    group: root
    mode: 0600
    state: present
    
- name: Generate a key for the service
  command: "openssl rsa -in {{ ipa_server_prv_file }} -out {{ ipa_server_key_file }} -passin file:{{ ipa_server_certs_dir }}.passin.txt"


