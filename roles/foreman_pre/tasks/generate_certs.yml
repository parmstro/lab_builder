---
# This set of tasks generates the IdM certs for the host using IdM
# The host is required to be an IdM client first
#

- set_fact:
    rsa_key_pass: "{{ foreman_admin_password  }}"

- name: Create the directory to contain the certificates
  file:
    state: directory
    path: /etc/ipa/private/

- name: Re-initialize the key space
  command: "rm -f /etc/ipa/private/*"

- name: Generate a private key
  openssl_privatekey:
    path: "{{ ipa_server_pem_file }}"
    passphrase: "{{ rsa_key_pass }}"
    cipher: "DES3"
    force: yes

# This module requires ansible 2.8 on RHEL 7.6 or better
# otherwise it will fail with an error stating it 
# requires pyOpenSSL >= 0.15 

- name: Generate the CSR with subjectAltNames set
  openssl_csr:
    path: "{{ ipa_server_csr_file }}"
    privatekey_path: "{{ ipa_server_prv_file }}"
    privatekey_passphrase: "{{ ipa_rsa_key_pass }}"
    state: present
    common_name: "{{ ansible_fqdn }}"
    subject_alt_name: "DNS:{{ ansible_fqdn }}"
    organization_name: "{{ ipa_organization_name }}"
    organizational_unit_name: "{{ ipa_ou_name }}"
    locality_name: "{{ ipa_locality_name }}"
    state_or_province_name: "{{ ipa_prov_name }}"
    country_name: "{{ ipa_country_name }}"
    email_address: "{{ ipa_email_address }}"


- name: Initialize the admin user
  shell: echo "{{ idm_admin }}" | kinit admin
  check_mode: no
  changed_when: "1 != 1"


# The new foreman-maintain/satellite-maintain package control handles the installation of ipa-client binaries
# so that compatibility can be maintained. /usr/bin/ipa is included in ipa-client, therefore, it should not
# be necessary to install ipa-admin-tools rpm

- name: Determine if the service exists
  command: "ipa service-show {{ ipa_service_type }}/{{ ansible_fqdn }}"
  register: result
  ignore_errors: true

- set_fact:
    service_exists: "{{ result.stderr | regex_search('(service not found)') }}"

- name: Add the service to IdM/FreeIPA
  command: "ipa service-add {{ ipa_service_type }}/{{ ansible_fqdn }}"
  when: service_exists != ""

- name: Request the certificate
  command: "ipa cert-request --add --principal={{ ipa_service_type }}/{{ ansible_fqdn }} {{ ipa_server_csr_file }}"
  register: result

- name: Get the certificate serial number
  set_fact: 
    serial_number: "{{ result.stdout_lines.7 | regex_replace('^.*: ', '') }}"

- name: Retrieve the certificate
  command: "ipa cert-show --certificate-out={{ ipa_server_crt_file }} {{ serial_number }}"

