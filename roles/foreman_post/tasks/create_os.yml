---
# Determine if the OS already exists.
# If it doesn't we will create it with basic info
# If it does, we will simply update == re-write it. 
# update will 
#
# Call with loop variable os
#
- name: "Determine if the OS exists - {{ os.name }}"
  command: "hammer os info --organization={{ os.organization | quote }} --location={{ os.location | quote }} --title={{ os.title | quote }}"
  register: os_exists
  ignore_errors: true

- name: Create the OS if it does not exist
  command: "hammer os create --organization={{ os.organization | quote }} --location={{ os.location | quote }} --title={{ os.title | quote }}"
  when: "os_exists.stdout ==''"

- name: Build the base hammer command
  set_fact:
    hammer_command: "hammer os info --organization={{ os.organization | quote }} --location={{ os.location | quote }} --title={{ os.title | quote }}"

- name: add Architectures if necessary
  set_fact:
    hammer_command: "{{ hammer_command }} --architectures={{ os.architectures | join(',') | quote }}"
  when: "os.architectures is defined"

- name: add Configuration Templates if necessary
  set_fact:
    hammer_command: "{{ hammer_command }} --config-templates={{ os.config_templates | join(',') | quote }}"
  when: "os.config_templates is defined"

- name: add Description if necessary
  set_fact:
    hammer_command: "{{ hammer_command }} --description={{ os.description | quote }}"
  when: "os.description is defined"

- name: add Family if necessary
  set_fact:
    hammer_command: "{{ hammer_command }} --family={{os.family | quote }}"
  when: "os.family is defined"

- name: add Major Relase if necessary
  set_fact:
    hammer_command: "{{ hammer_command }} --family={{os.major | quote }}"
  when: "os.major is defined"

- name: add Minor Relase if necessary
  set_fact:
    hammer_command: "{{ hammer_command }} --family={{os.minor | quote }}"
  when: "os.minor is defined"

- name: add Partition Tables if necessary
  set_fact:
    hammer_command: "{{ hammer_command }} --partition-tables={{ os.ptables | join(',') | quote }}"
  when: "os.ptables is defined"

- name: add Password Hash if necessary
  set_fact:
    hammer_command: "{{ hammer_command }} --password-hash={{os.password_hash | quote }}"
  when: "os.password_hash is defined"

- name: add Provisioning Templates if necessary
  set_fact:
    hammer_command: "{{ hammer_command }} --provisioning-templates={{ os.ptemplates | join(',') | quote }}"
  when: "os.ptemplates is defined"

- name: Add the release name if necessary
  set_fact:
    hammer_command: "{{ hammer_command }} --release-name={{ os.release_name | quote }}"

- name: Execute the command to update the OS
  command: "{{ hammer_command }}"

# - name: 
#  command: "hammer os info --organization={{ os.organization | quote }} --location={{ os.location | quote }} --name={{ os.name | quote }} --architectures={{ os.architectures | quote }} --config-templates={{ os.config_templates | quote }} --description={{ os.description | quote }} --family={{ os.family | quote }} --major={{ os.major | quote }} --minor={{ os.minor }} --partition-tables={{ 

 

