---
# This task creates an individual partition table from specified paramters
# Call this task with loop_var: ptable
#
# Specify the list as ptable_mandatory or ptable_optional in the vars file
#
# 
- name: Determine if the Partition Table Exists
  command: "hammer --output=json partition-table info --organization={{ ptable.organization | quote }} --name={{ ptable.name | quote }}"
  register: ptable_exists
  ignore_errors: true

# We create a temporary file to allow us to render the ansible template of
# our partition tables using ansible variables for the target environment
# 
# once rendered we load the finished ptable into satellite
- name: Create temporary file
  tempfile:
    state: file
    suffix: temp
  register: output

# NOTE: Jinja2 and Foreman templating seem to be exclusive and can co-exist in the same file.
- name: Template out the partition table
  template:
    src: "{{ ptable.path }}"
    dest: "{{ output.path }}"

- name: Delete existing instance
  command: "hammer partition-table delete --name={{ ptable.name | quote }} --organization={{ ptable.organization | quote }} --location={{ ptable.location | quote }}"
  ignore_errors: true

# As our goal is to create the initial conditions for our lab rather than revising an existing lab (at this point)
# we delete and recreate.
- name: Create Partition Table definition as initial version
  command: "hammer partition-table create --name={{ ptable.name | quote }} --organization={{ ptable.organization | quote }} --location={{ ptable.location | quote }} --file={{ output.path | quote }} --audit-comment={{ ptable.audit_comment | quote }} --os-family={{ ptable.os_family }}"

