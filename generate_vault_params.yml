---
# This is a playbook that will generate random encrypted 
# passwords for lab_builder.
# List the password variables that you would like generated 
# and their length below. Passwords will be generated and encrypted
# using the password file located in password_file
# This password_file should contain the master password and be stored in
# a private,protected location outside of the repository.
# Only with the file with the right password and matching encrypted file
# will you be able to successfully run plays using the generated variables
#
- name: Prepare Vault parameters
  hosts: localhost
  gather_facts: false
  become: yes
  become_method: sudo
  vars_prompt:
    - name: root_password
      prompt: "Enter the new root password:"
      private: yes
    - name: root_password_verify
      prompt: "Verify the new root password:"
      private: yes

  vars:
    match: false
    password_file: ~/.vault/lab_builder/builder.pwd
    output_file: ./vars/encrypted_password.yml
    variable_list:
      - name: system_root
        minlength: 64
        value: "{{ root_password }}"
      - name: satellite_admin
        minlength: 64
      - name: idm_admin
        minlength: 64
      - name: tower_admin
        minlength: 64
      - name: rhv_admin
        minlength: 64
      - name: cfme_admin
        minlength: 64
      - name: openshift_admin
        minlength: 64
      - name: realm_capsule
        minlength: 64
      - name: cert_manager
        minlength: 64
      - name: ldap_query
        minlength: 64
      - name: builder_admin
        minlength: 64

  tasks:
  - name: "Verifying..."
    set_fact:
      match: true
    when: "root_password == root_password_verify"

  - name: "Verification complete."
    debug:
      msg: "Password Verification!: {{ match }}"
    failed_when: "match == false"

  - name: "Install utilities"
    yum:
      name: expect
      state: latest

  - name: create the output file
    file: 
      name: "{{ output_file }}"
      state: touch

  - name: create the passwords, encrypt them and write them to the file
    include_tasks: write_encrypted_variables.yml
    loop: "{{ variable_list }}"
    loop_control:
      loop_var: var

  - name: log the encypted passwords
    command: "cat {{ output_file }}"
    register: output

  - debug:
      msg: "{{ output.stdout }}"

