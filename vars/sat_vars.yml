# The real way to do this is to take a json dump of a foreman environment
# and then feed that to an ansible play to recreate. 
# cdn_username and cdn_password are required 
# when adding OCP Images as custom products as below. This is needed for registry.redhat.io

############################################################################################
# NOTE: This is a long and complicated file. It represents the complete configuration of 
# a Foreman or Satellite Server, so, ya, long is a good word... lot's of knobs and dials
#
# So...
# _optional sections are well, optional, they only run tasks when defined
# _mandatory sections are, you guessed it, mandatory - they are critical to building
# the foreman or Satellite server **FOR YOUR ENVIRONMENT** 
# This is my environment so applies to mine and my goals... see the base README for more.
# Also see my Lab Architecture drawing in the root of the project.
#
# Tasks that fail for anything configured in a section ending in _optional will not stop
# the build of the environment like failures in a _mandatory sections will.
# If you are testing new sections you wish to add and quickly move them between optional
# and mandatory, configure them as optional and use optional_fatal: "true"
#
###########################################################################################
# This is the list of repos that need to be enabled on the server to install Satellite
# This list is for version 6.10 - modify as needed for your version of Satellite
satellite_repos:
- name: "RHEL 7 Server rpms"
  repoid: "rhel-7-server-rpms"
- name: "Red Hat Software Collections"
  repoid: "rhel-server-rhscl-7-rpms" 
- name: "Red Hat Satellite 6.10 rpms"
  repoid: "rhel-7-server-satellite-6.10-rpms"
- name: "Red Hat Satellite 6 Maintenance rpms"
  repoid: "rhel-7-server-satellite-maintenance-6-rpms"
- name: "Red Hat Ansible 2.9"
  repoid: "rhel-7-server-ansible-2.9-rpms"


# cause optional sections below to fail the build 
# if the optional section has a configuration failure
# We are debugging, so currently true, everything breaks
optional_fatal: "true"

# turn debug output in plays on (true) or off (false)
debug_output: "false"

# reset foreman rather than reinstalling 
# if you have made changes to the Satellite configuration since the last run 
# on existing machines, set this to false otherwise leave as default
reset_foreman: "false"

builder_run_tag: "Lab Builder - Foreman Builder - {{ ansible_date_time.iso8601 }}"

bootstrap_add_utils:
- bind-utils
- tmux

# used for preparing the Satellite Server
sat_firewalld_zone: "public"

# The IPA client can only be configured after the IPA Server is installed
ipa_install_client: true
ipa_generate_certs: true
ipa_server_certs_dir: "/etc/ipa/private/"
ipa_server_passfile: "{{ ipa_server_certs_dir }}passfile"
ipa_server_pem_file: "{{ ipa_server_certs_dir }}{{ ansible_fqdn }}.pem"
ipa_server_crt_file: "{{ ipa_server_certs_dir }}{{ ansible_fqdn }}.crt"
ipa_server_key_file: "{{ ipa_server_certs_dir }}{{ ansible_fqdn }}.key"
ipa_server_csr_file: "{{ ipa_server_certs_dir }}{{ ansible_fqdn }}.csr"
ipa_server_ca_file: "/etc/ipa/ca.crt"

# ipa_rsa_key_pass is defined in password_vars.yml for random password generation
# configure password_vars.yml to set the password to a known value
ipa_organization_name: "{{ ansible_domain | upper }}"
ipa_ou_name: "Demo Lab"
ipa_locality_name: "Hespeler"
ipa_prov_name: "ON"
ipa_country_name: "CA"
ipa_email_address: "admin@{{ ansible_domain }}"
ipa_service_type: "HTTP"

# used for installing the Satellite Server
# See template file in ../roles/satellite/templates/satellite-answers.yml
scenario: "satellite"

cdn_proxy_hostname: ""
cdn_proxy_port: ""
cdn_proxy_username: ""
cdn_proxy_password: ""
certs_node_fqdn: "{{ ansible_fqdn }}"
certs_ca_common_name: "{{ ansible_fqdn }}"
foreman_foreman_url: "https://{{ ansible_fqdn }}"
foreman_servername: "{{ ansible_fqdn }}"
foreman_server_ssl_ca: "/etc/pki/katello/certs/katello-default-ca.crt"
foreman_server_ssl_chain: "/etc/pki/katello/certs/katello-server-ca.crt"
foreman_server_ssl_cert: "/etc/pki/katello/certs/katello-apache.crt"
foreman_server_ssl_certs_dir: "/etc/pki/tls/certs"
foreman_server_ssl_key: "/etc/pki/katello/private/katello-apache.key"
foreman_server_ssl_crl: "false"
foreman_admin_username: "admin"
foreman_admin_password: "{{ sat_admin }}"
foreman_admin_firstname: "admin"
foreman_admin_lastname: "istrator"
foreman_admin_email: "admin@{{ ansible_domain }}"
foreman_initial_organization: "Demo"
foreman_initial_location: "Lab"
foreman_ipa_authentication: "false"
foreman_compute_ec2: "true"
foreman_compute_gce: "true"
foreman_compute_libvirt: "true"
foreman_compute_openstack: "true"
foreman_compute_ovirt: "true"
foreman_compute_rackspace: "true"
foreman_compute_vmware: "true"

foreman_puppet_ca: "false"
foreman_puppet: "false"

foreman_proxy_tftp: "true"
foreman_proxy_tftp_servername: "{{ ansible_fqdn }}"

foreman_proxy_dns: "true"
foreman_proxy_dns_managed: "true"
foreman_proxy_dns_provider: "nsupdate_gss"
foreman_proxy_dns_interface: "{{ ansible_facts.interfaces | select('match', '^(e)+') | list | first }}"
foreman_proxy_dns_zone: "{{ ansible_domain }}"
foreman_proxy_dns_forwarders: ""
foreman_proxy_dns_reverse: "192.168.in-addr.arpa"
foreman_proxy_dns_server: "{{ groups['build_master'] | first }}"
foreman_proxy_dns_tsig_keytab: "/etc/foreman-proxy/freeipa.keytab"
foreman_proxy_dns_tsig_principal: "realm-capsule"
 
# It is important that these values match your network configuration
# for the prepare step
foreman_proxy_dhcp: "false"
foreman_proxy_dhcp_interface: "{{ ansible_facts.interfaces | select('match', '^(e)+') | list | first }}"
foreman_proxy_dhcp_range: "192.168.250.1 192.168.250.254" 
foreman_proxy_dhcp_gateway: "192.168.248.1"
foreman_proxy_dhcp_nameservers: "192.168.248.10" 
foreman_proxy_dhcp_option_domain: 
  - "{{ ansible_domain }}"
foreman_proxy_dhcp_pxeserver: "{{ ansible_fqdn }}"
foreman_proxy_dhcp_network: "192.168.248.0"
foreman_proxy_dhcp_netmask: "255.255.252.0"

foreman_proxy_realm: "true"
foreman_proxy_realm_provider: "freeipa"
foreman_proxy_realm_keytab: "/etc/foreman-proxy/freeipa.keytab"
foreman_proxy_realm_principal: "realm-capsule"

foreman_proxy_puppet: "false"
puppet_enable_puppet_server: "false"

# used in post installation configuration
# What defines a repo is its organization, product, repository set name, architecture and release version
# These are needed to synch. See README.md for more information on determining these values
setup_hammer: "true"

upload_manifest: "true"
manifest_src_location: "/root/bootstrap_manifest.zip"

setup_repositories: "true"
repos_mandatory:
- name: "Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server"
  product: "Red Hat Enterprise Linux Server"
  basearch: "x86_64"
  releasever: "7Server"
- name: "Red Hat Enterprise Linux 7 Server - Extras RPMs x86_64"
  product: "Red Hat Enterprise Linux Server"
  basearch: "x86_64"
  releasever: ""
- name: "Red Hat Enterprise Linux 7 Server - RH Common RPMs x86_64 7Server"
  product: "Red Hat Enterprise Linux Server"
  basearch: "x86_64"
  releasever: "7Server"
- name: "Red Hat Enterprise Linux 7 Server - Optional RPMs x86_64 7Server"
  product: "Red Hat Enterprise Linux Server"
  basearch: "x86_64"
  releasever: "7Server"
- name: "Red Hat Enterprise Linux 7 Server - Supplementary RPMs x86_64 7Server"
  product: "Red Hat Enterprise Linux Server"
  basearch: "x86_64"
  releasever: "7Server"
- name: "Red Hat Enterprise Linux 7 Server Kickstart x86_64 7.9"
  product: "Red Hat Enterprise Linux Server"
  basearch: "x86_64"
  releasever: "7.9"
- name: "Red Hat Ansible Engine 2.9 RPMs for Red Hat Enterprise Linux 7 Server x86_64"
  product: "Red Hat Ansible Engine"
  basearch: "x86_64"
  releasever: ""
- name: "Red Hat Satellite Tools 6.10 for RHEL 7 Server RPMs x86_64"
  product: "Red Hat Enterprise Linux Server"
  basearch: "x86_64"
  releasever: "7Server"
- name: "Red Hat Enterprise Linux High Availability for RHEL 7 Server RPMs x86_64 7Server"
  product: "Red Hat Enterprise Linux High Availability for x86_64"
  basearch: "x86_64"
  releasever: "7Server"
- name: "Red Hat Enterprise Linux Resilient Storage for RHEL 7 Server RPMs x86_64 7Server"
  product: "Red Hat Enterprise Linux Resilient Storage for x86_64"
  basearch: "x86_64"
  releasever: "7Server"

- name: "Red Hat Enterprise Linux 8 for x86_64 - BaseOS RPMs x86_64 8"
  product: "Red Hat Enterprise Linux for x86_64"
  basearch: "x86_64"
  releasever: "8"
- name: "Red Hat Enterprise Linux 8 for x86_64 - AppStream RPMs x86_64 8"
  product: "Red Hat Enterprise Linux for x86_64"
  basearch: "x86_64"
  releasever: "8"
- name: "Red Hat Enterprise Linux 8 for x86_64 - Supplementary RPMs x86_64 8"
  product: "Red Hat Enterprise Linux for x86_64"
  basearch: "x86_64"
  releasever: "8"
- name: "Red Hat Enterprise Linux 8 for x86_64 - BaseOS Kickstart x86_64 8.5"
  product: "Red Hat Enterprise Linux for x86_64"
  basearch: "x86_64"
  releasever: "8.5"
- name: "Red Hat Enterprise Linux 8 for x86_64 - AppStream Kickstart x86_64 8.5"
  product: "Red Hat Enterprise Linux for x86_64"
  basearch: "x86_64"
  releasever: "8.5"
- name: "Red Hat Ansible Engine 2.9 for RHEL 8 x86_64 RPMs x86_64"
  product: "Red Hat Ansible Engine"
  basearch: "x86_64"
  releasever: ""
- name: "Red Hat Satellite Tools 6.10 for RHEL 8 x86_64 RPMs x86_64"
  product: "Red Hat Enterprise Linux for x86_64"
  basearch: "x86_64"
  releasever: "8"
- name: "Red Hat Enterprise Linux 8 for x86_64 - High Availability RPMs x86_64 8"
  product: "Red Hat Enterprise Linux High Availability for x86_64"
  basearch: "x86_64"
  releasever: "8"
- name: "Red Hat Enterprise Linux 8 for x86_64 - Resilient Storage RPMs x86_64 8"
  product: "Red Hat Enterprise Linux Resilient Storage for x86_64"
  basearch: "x86_64"
  releasever: "8"

lifecycle_environments:
- name: "Dev"
  label: "Dev"
  desc: "Development Servers - {{ builder_run_tag }}"
  org: "{{ foreman_initial_organization }}"
  prior: "Library"
- name: "QA"
  label: "QA"
  desc: "Quality Assurance Servers - {{ builder_run_tag }}"
  org: "{{ foreman_initial_organization }}"
  prior: "Dev"
- name: "Prod"
  label: "Prod"
  desc: "Production Servers - {{ builder_run_tag }}"
  org: "{{ foreman_initial_organization }}"
  prior: "QA"
- name: "Retired"
  label: "Retired"
  desc: "Retired Servers - {{ builder_run_tag }}"
  org: "{{ foreman_initial_organization }}"
  prior: "Prod"

setup_base_soe_cv: "true"
# This sets the filter end date to today's date. 
# AutomatingContentManagement repo code will be used to modify this later
#
errata_end_date: "{{ ansible_date_time.date }}"
cvs_mandatory:
- name: "SOE_RHEL7"
  desc: "Red Hat Enterprise Linux 7 Standard Operating Environment Content - {{ builder_run_tag }}"
  org: "{{ foreman_initial_organization }}"
  repositories:
  - "Red Hat Ansible Engine 2.9 RPMs for Red Hat Enterprise Linux 7 Server"
  - "Red Hat Satellite Tools 6.10 for RHEL 7 Server RPMs x86_64"
  - "Red Hat Enterprise Linux 7 Server - Extras RPMs x86_64"
  - "Red Hat Enterprise Linux 7 Server - Optional RPMs x86_64 7Server"
  - "Red Hat Enterprise Linux 7 Server - RH Common RPMs x86_64 7Server"
  - "Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server"
  - "Red Hat Enterprise Linux 7 Server Kickstart x86_64 7.9"
  filters:
  - name: "AllPackagesNoErrata"
    type: "rpm"
    inclusion: "true"
    description: "Include all packages with no errata for all repositories"
    repositories: "[]"
  - name: "ErrataByDate"
    type: "erratum"
    inclusion: "true"
    description: "Include all errata updated as of the 1st of the month"
    repositories: "[]"
    rules:
    - name: "errata-by-date-{{ errata_end_date }}"
      end_date: "{{ errata_end_date }}"
      date_type: "issued"
      types:
      - "enhancement"
      - "bugfix"
      - "security"
  - name: "NoFireFox"
    type: "rpm"
    inclusion: "false"
    description: "Do provide Firefox to be installed on servers"
    repositories: "[]"
    rules:
    - name: "firefox*"
      basearch: "x86_64"

- name: "RHEL7_HA_RS"
  desc: "Red Hat Enterprise Linux 7 High Availability Content - {{ builder_run_tag }}"
  org: "{{ foreman_initial_organization }}"
  repositories:
  - "Red Hat Enterprise Linux High Availability for RHEL 7 Server RPMs x86_64 7Server"
  - "Red Hat Enterprise Linux Resilient Storage for RHEL 7 Server RPMs x86_64 7Server"
  filters:
  - name: "AllPackagesNoErrata"
    type: "rpm"
    inclusion: "true"
    description: "Include all packages with no errata for all repositories"
    repositories: "[]"
  - name: "ErrataByDate"
    type: "erratum"
    inclusion: "true"
    description: "Include all errata updated as of the 1st of the month"
    repositories: "[]"
    rules:
    - name: "errata-by-date-{{ errata_end_date }}"
      end_date: "{{ errata_end_date }}"
      date_type: "issued"
      types:
      - "enhancement"
      - "bugfix"
      - "security"

- name: "SOE_RHEL8"
  desc: "Red Hat Enterprise Linux 8 Standard Operating Environment Content - {{ builder_run_tag }}"
  org: "{{ foreman_initial_organization }}"
  repositories:
  - "Red Hat Enterprise Linux 8 for x86_64 - BaseOS RPMs x86_64 8"
  - "Red Hat Enterprise Linux 8 for x86_64 - AppStream RPMs x86_64 8"
  - "Red Hat Enterprise Linux 8 for x86_64 - Supplementary RPMs x86_64 8"
  - "Red Hat Enterprise Linux 8 for x86_64 - BaseOS Kickstart x86_64 8.5"
  - "Red Hat Enterprise Linux 8 for x86_64 - AppStream Kickstart x86_64 8.5"
  - "Red Hat Ansible Engine 2.9 for RHEL 8 x86_64 RPMs x86_64"
  - "Red Hat Satellite Tools 6.10 for RHEL 8 x86_64 RPMs x86_64"
  filters:
  - name: "AllPackagesNoErrata"
    type: "rpm"
    inclusion: "true"
    description: "Include all packages with no errata for all repositories"
    repositories: "[]"
  - name: "AllStreamsNoErrata"
    type: "modulemd"
    inclusion: "true"
    description: "Include all module streams with no errata for all repositories"
    repositories: "[]"
  - name: "ErrataByDate"
    type: "erratum"
    inclusion: "true"
    description: "Include all errata updated as of the 1st of the month"
    repositories: "[]"
    rules:
    - name: "errata-by-date-{{ errata_end_date }}"
      end_date: "{{ errata_end_date }}"
      date_type: "issued"
      types:
      - "enhancement"
      - "bugfix"
      - "security"
  - name: "NoFireFox"
    type: "rpm"
    inclusion: "false"
    description: "Do provide Firefox to be installed on servers"
    repositories: "[]"
    rules:
    - name: "firefox*"
      basearch: "x86_64"

- name: "RHEL8_HA_RS"
  desc: "Red Hat Enterprise Linux 8 High Availability Content - {{ builder_run_tag }}"
  org: "{{ foreman_initial_organization }}"
  repositories:
  - "Red Hat Enterprise Linux 8 for x86_64 - High Availability RPMs x86_64 8"
  - "Red Hat Enterprise Linux 8 for x86_64 - Resilient Storage RPMs x86_64 8"
  filters:
  - name: "AllPackagesNoErrata"
    type: "rpm"
    inclusion: "true"
    description: "Include all packages with no errata for all repositories"
    repositories: "[]"
  - name: "AllStreamsNoErrata"
    type: "modulemd"
    inclusion: "true"
    description: "Include all module streams with no errata for all repositories"
    repositories: "[]"
  - name: "ErrataByDate"
    type: "erratum"
    inclusion: "true"
    description: "Include all errata updated as of the 1st of the month"
    repositories: "[]"
    rules:
    - name: "errata-by-date-{{ errata_end_date }}"
      end_date: "{{ errata_end_date }}"
      date_type: "issued"
      types:
      - "enhancement"
      - "bugfix"
      - "security"

cvs_optional:

ccvs_mandatory:
- name: "SOE_RHEL7_HA_RS"
  desc: "Current RHEL7 High Availability Standard Operating Environment Content - {{ builder_run_tag }}"
  org: "{{ foreman_initial_organization }}"
  components:
  - "SOE_RHEL7"
  - "RHEL7_HA_RS"

- name: "SOE_RHEL8_HA_RS"
  desc: "Current RHEL8 High Availability Standard Operating Environment Content - {{ builder_run_tag }}"
  org: "{{ foreman_initial_organization }}"
  components:
  - "SOE_RHEL8"
  - "RHEL8_HA_RS"

ccvs_optional:
# TODO: Add the MSSQL content view and component

setup_sync_plans: "true"
sync_plans_mandatory:
- name: nightly_os
  desc: "Nightly OS repo sync - 00:30 - {{ builder_run_tag }}"
  interval: "daily"
  sync_date: "{{ ansible_date_time.date }} 00:30:00"
  enabled: true
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"


setup_products: true
custom_products:
- name: "Red Hat SCAP OVAL Files"
  desc: "SCAP Content for Red Hat Products managed by Red Hat"
  org: "{{ foreman_initial_organization }}"
  label: rh_scap_content
  repository_name:
  - name: RedHatSCAPContent
    upstream_name: ""
    repository_content_type: file
    url: "https://redhat.com/security/data/oval/"
    username: ""
    password: ""

setup_attach_plan_to_product: "true"
product_plan:
- name: "Red Hat Ansible Engine"          
  plan: "nightly_infra"
  organization: "{{ foreman_initial_organization }}"
- name: "Red Hat Enterprise Linux Server"
  plan: "nightly_os"
  organization: "{{ foreman_initial_organization }}"
  
setup_general_settings: "false"

setup_organizations: "false"
# Parameters?

setup_locations: "false"
# Paramters? Yes!

setup_users: "false"
setup_groups: "false"
setup_roles: "false"

# PUT YOUR MANDATORY MEDIA DEFINITIONS IN HERE - stuff required for your initial builders 
# OR BEST PRACTICE IS ADD YOUR OWN FOREMAN_POST to your builder.
# DO NOT REMOVE RHEL
setup_mandatory_media: "true"
media_mandatory:
- name: RHEL7Server
  os_family: Redhat
  path: "http://{{ ansible_fqdn }}/pulp/repos/{{ foreman_initial_organization | replace(' ', '_') }}/Library/content/dist/rhel/server/7/$major.$minor/$arch/kickstart/"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"


# PUT YOUR MEDIA DEFINITIONS IN OPTIONAL MEDIA
setup_optional_media: "false"
media_optional:
#  - name: Fedora31 
#    os_family: Redhat
#    path: "http://{{ ansible_fqdn }}/pulp/repos/{{ foreman_initial_organization | replace(' ', '_') }}/Library/custom/Fedora/Fedora31/"
#    organization: "{{ foreman_initial_organization }}"
#    location: "{{ foreman_initial_location }}"
 

# Place your partition table templates in the foreman_post templates directory

setup_ptables: "true"
ptables_mandatory:
- name: "rhel_soe"
  os_family: "Redhat"
  path: "ptable_rhel_soe.j2"
  audit_comment: "Lab Builder Base RHEL SOE Partition Table - {{ builder_run_tag }}"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"
- name: "cpgpc"
  os_family: "Redhat"
  path: "ptable_cpgpc.j2"
  audit_comment: "Lab Builder Common Profile for General Purpose Computing Partition Table - {{ builder_run_tag }}"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"


setup_prov_templates: "true"
# hammer template kinds
# ---------
# NAME     
# ---------
# Bootdisk # PXELinux # PXEGrub  # PXEGrub2 # iPXE  # provision
# finish   # script   # user_data# ZTP      # POAP  # kexec    
# snippet  

# Place your provisioning templates in the foreman_post templates directory

prov_templates_mandatory:
- name: "lab_kickstart_default"
  type: "provision"
  locked: false
  audit_comment: "Lab Builder Kickstart Default - {{ builder_run_tag }}"
  path: "prov_template_lab_kickstart_default.j2"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"

#snippet
- name: "lab_ansible_provisioning_callback"
  type: "snippet"
  locked: false
  audit_comment: "Lab Builder Anisble Callback Snippet - {{ builder_run_tag }}"
  path: "prov_template_snippet_rhc_ansible_provisioning_callback.j2"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"
- name: "lab_epel"
  type: "snippet"
  locked: false
  audit_comment: "Lab Builder EPEL Snippet - {{ builder_run_tag }}"
  path: "prov_template_snippet_lab_epel.j2"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"
- name: "lab_freeipa_register"
  type: "snippet"
  locked: false
  audit_comment: "Lab Builder Snippet for FreeIPA/IdM registration - {{ builder_run_tag }}"
  path: "prov_template_snippet_lab_freeipa_register.j2"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"
- name: "lab_redhat_register"
  type: "snippet"
  locked: false
  audit_comment: "Lab Builder Snippet subscription-manager registration - {{ builder_run_tag }}"
  path: "prov_template_snippet_lab_redhat_register.j2"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"
- name: "lab_remote_execution_ssh_keys"
  type: "snippet"
  locked: false
  audit_comment: "Lab Builder Snippet for remote execution setup - {{ builder_run_tag }}"
  path: "prov_template_snippet_lab_remote_execution_ssh_keys.j2"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"
- name: "lab_rhv_specific"
  type: "snippet"
  locked: false
  audit_comment: "Lab Builder Snippet for RHV clients- {{ builder_run_tag }}"
  path: "prov_template_snippet_lab_rhv_specific.j2"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"
- name: "lab_vmware_specific"
  type: "snippet"
  locked: false
  audit_comment: "Lab Builder Snippet for VMware clients- {{ builder_run_tag }}"
  path: "prov_template_snippet_lab_vmware_specific.j2"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"

setup_oss: "true"
oss_special:
- name: "RedHat"
  title: "RHEL Server 7.9"
  major: 7
  minor: 7
  description: "Red Hat Base OS created by synchronization - {{ builder_run_tag }}"
  family: "Redhat"
  password_hash: "SHA256"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"
  architectures:
  - "x86_64"
  config_templates:
  - "Kickstart default PXELinux"
  - "Kickstart default PXEGrub"
  - "Kickstart default PXEGrub2"
  - "Kickstart default iPXE"
  - "lab_kickstart_default"
  - "Kickstart default finish"
  - "Kickstart default user data"
  media:
  - "RHEL7Server"
  ptables:
  - "Kickstart default"
  - "rhel_soe"
  - "cpgpc"

oss_mandatory:

#  - {{ builder_run_tag }}
# We need to ensure that we have all the required configuration
# for a host group
# Currently, we are examining only one datacentre in this sample
# Larger configurations with multiple DCs can be defined
# you can configure optional domains, realms, etc.. for remotes
# if you are concerned once happy, simply remove the _optional
# tag or place it above only those that are truly optional
# (demos, toys, skunkworks, 8-)  )

# ActivationKeys
# Again, mandatory (to meet base config), optional (to add to the config - also failing will not stop build till the end of the phase)
# you can have unlimited hosts defined or max_hosts defined, not both or boom
setup_activation_keys: true
aks_mandatory:
- name: "RHEL_SOE"
  organization: "{{ foreman_initial_organization }}"
  unlimited_hosts: true
  auto_attach: true

setup_domains: "true"
domains_mandatory:
- name: "{{ ansible_domain }}"
  description: "root domain for the installation"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"

setup_realms: "true"
realms_mandatory:
- name: "{{ ansible_domain | upper }}"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"
  realm_type: "Red Hat Identity Management"
  capsule: "{{ ansible_fqdn }}"

setup_subnets: "true"
subnets_mandatory:
- name: "Public"
  boot_mode: "Static"
  description: "Front side for client apps  - {{ builder_run_tag }}"
  network: 192.168.248.0
  prefix: 22
  mask: 255.255.252.0
  network_type: "IPv4"
  gateway: 192.168.248.1
  dns_primary: 192.168.248.10
  dns_secondary: 192.168.248.11
  ipam: "Internal DB"
  from: 192.168.249.1
  to: 192.168.249.254
  discovery_capsule: "{{ ansible_fqdn }}"
  tftp_capsule: "{{ ansible_fqdn }}"
#  dns_capsule: "{{ ansible_fqdn }}"
#  template_capsule: "{{ ansible_fqdn }}"
#  dhcp_capsule: "{{ ansible_fqdn }}"
  domains: 
  - "{{ ansible_domain }}"
  locations:
  - "{{ foreman_initial_location }}"
  organizations: 
  - "{{ foreman_initial_organization }}"

- name: "ProvMgtMig"
  boot_mode: "Static"
  description: "Provisioning, Management and Migration- {{ builder_run_tag }}"
  network: 192.168.148.0
  prefix: 22
  mask: 255.255.252.0
  network_type: "IPv4"
  gateway: 192.168.148.1
  ipam: "Internal DB"
  from: 192.168.149.1
  to: 192.168.149.254
  discovery_capsule: "{{ ansible_fqdn }}"
  tftp_capsule: "{{ ansible_fqdn }}"
  locations: 
  - "{{ foreman_initial_location }}"
  organizations: 
  - "{{ foreman_initial_organization }}"

#TODO: set up Ansible Roles in foreman
# then we can add them to the hostgroup

setup_hostgroups: "true"
hostgroups_baremetal:
- name: "BaseBareMetal"
  arch: "x86_64"
  ask_root_password: false
  content_view: "SOE_RHEL"
  description: "Use to deploy basic bare metal RHEL systems e.g. IdM Servers, etc.."
  content_source: "{{ ansible_fqdn }}"
  domain: "{{ ansible_domain }}"
  lifecycle_environment: "Library"
  organization: "{{ foreman_initial_organization }}"
  location: "{{ foreman_initial_location }}"
  os_title: "RHEL Server 7.7"
  medium: "RHEL7Server"
  pxe_loader: "PXELinux BIOS"
  realm: "{{ ansible_domain | upper }}"
  subnet: "Public"
  root_pass: "{{ sat_admin }}"

#TODO: setup SCAP profiles... this can wait till a later phase
        
setup_discovery: "true"
discovery_rules:

setup_infrastructure: "false"

setup_virtwho: "false"

setup_compute_resources: "false"
comp_res_mandatory:
- name: "VMware"
  type: "esx"
  controller_hostname: "your_vcentre_server_here"
  controller_username: "service_admin_name"
  controller_password: "service_password"
  virtwho_username: "readonly_admin_name"
  virtwho_password: "virtwho_password"

comp_res_optional:

setup_oscap: "false"

