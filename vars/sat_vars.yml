# The real way to do this is to take a json dump of a foreman environment
# and then feed that to an ansible play to recreate. 
# cdn_username and cdn_password are required 
# when adding OCP Images as custom products as below. This is needed for registry.redhat.io

############################################################################################
# NOTE: This is a long and complicated file. It represents the complete configuration of 
# a Foreman or Satellite Server, so, ya, long is a good word... lot's of knobs and dials
#
# So...
# _optional sections are well, optional, they only run tasks when defined
# _mandatory sections are, you guessed it, mandatory - they are critical to building
# the foreman or Satellite server **FOR YOUR ENVIRONMENT** 
# This is my environment so applies to mine and my goals... see the base README for more.
# Also see my Lab Architecture drawing in the root of the project.
#
# Tasks that fail for anything configured in a section ending in _optional will not stop
# the build of the environment like failures in a _mandatory sections will.
# If you are testing new sections you wish to add and quickly move them between optional
# and mandatory, configure them as optional and use optional_fatal: "true"
#
###########################################################################################

# cause optional sections below to fail the build 
# if the optional section has a configuration failure
# We are debugging, so currently true, everything breaks
optional_fatal: "true"

# reset foreman rather than reinstalling 
# if you have made changes to the Satellite configuration since the last run 
# on existing machines, set this to false otherwise leave as default
reset_foreman: "true"

builder_run_tag: "Lab Builder - Foreman Builder - {{ ansible_date_time.iso8601 }}"

bootstrap_add_utils:
  - bind-utils
  - screen

# used for preparing the Satellite Server
sat_firewalld_zone: "public"


# The IPA client can only be configured after the IPA Server is installed
# We will ues these values after the Satellite and IPA serves are bootstrapped
ipa_install_client: true
ipa_generate_certs: true
ipa_server_certs_dir: "/etc/ipa/private/"
ipa_server_pem_file: "{{ ipa_server_certs_dir }}{{ ansible_fqdn }}.pem"
ipa_server_crt_file: "{{ ipa_server_certs_dir }}{{ ansible_fqdn }}.crt"
ipa_server_key_file: "{{ ipa_server_certs_dir }}{{ ansible_fqdn }}.key"
ipa_server_csr_file: "{{ ipa_server_certs_dir }}{{ ansible_fqdn }}.csr"
ipa_server_ca_file: "/etc/ipa/ca.crt"
# ipa_rsa_key_pass is defined in password_vars.yml for random password generation
# configure password_vars.yml to set the password to a known value
ipa_organization_name: "{{ ansible_domain | upper }}"
ipa_ou_name: "Demo Lab"
ipa_locality_name: "Hespeler"
ipa_prov_name: "ON"
ipa_country_name: "CA"
ipa_email_address: "admin@{{ ansible_domain }}"
ipa_service_type: "HTTP"

# used for installing the Satellite Server
# See template file in ../roles/satellite/templates/satellite-answers.yml
scenario: "satellite"
# the following 2 keys are unused now that registration is managed in prepare
# for bootstrap hosts
# redhat_org: "6856506"
# activation_key: "satbootstrap"
cdn_proxy_hostname: ""
cdn_proxy_port: ""
cdn_proxy_username: ""
cdn_proxy_password: ""
certs_node_fqdn: "{{ ansible_fqdn }}"
certs_ca_common_name: "{{ ansible_fqdn }}"
foreman_foreman_url: "https://{{ ansible_fqdn }}"
foreman_servername: "{{ ansible_fqdn }}"
foreman_server_ssl_ca: "/etc/pki/katello/certs/katello-default-ca.crt"
foreman_server_ssl_chain: "/etc/pki/katello/certs/katello-server-ca.crt"
foreman_server_ssl_cert: "/etc/pki/katello/certs/katello-apache.crt"
foreman_server_ssl_certs_dir: "/etc/pki/tls/certs"
foreman_server_ssl_key: "/etc/pki/katello/private/katello-apache.key"
foreman_server_ssl_crl: "false"
foreman_admin_username: "admin"
foreman_admin_password: "{{ sat_admin }}"
foreman_admin_firstname: "admin"
foreman_admin_lastname: "istrator"
foreman_admin_email: "admin@{{ ansible_domain }}"
foreman_initial_organization: "Default Organization"
foreman_initial_location: "Default Location"
foreman_ipa_authentication: "false"
foreman_compute_ec2: "true"
foreman_compute_gce: "true"
foreman_compute_libvirt: "true"
foreman_compute_openstack: "true"
foreman_compute_ovirt: "true"
foreman_compute_rackspace: "true"
foreman_compute_vmware: "true"

foreman_puppet_ca: "false"
foreman_puppet: "false"

foreman_proxy_tftp: "true"
foreman_proxy_tftp_servername: "{{ ansible_fqdn }}"

foreman_proxy_dns: "false"
foreman_proxy_dns_interface: "discover"
foreman_proxy_dns_zone: "{{ ansible_domain }}"
foreman_proxy_dns_forwarders: ""
foreman_proxy_dns_reverse: "192.168.in-addr.arpa"

foreman_proxy_dhcp: "false"
foreman_proxy_dhcp_interface: "{{ ansible_facts.interfaces | select('match', '^(e)+') | list | first }}"
foreman_proxy_dhcp_range: "192.168.254.172 192.168.254.204" 
foreman_proxy_dhcp_gateway: "192.168.252.1"
foreman_proxy_dhcp_nameservers: "192.168.252.10" 
foreman_proxy_dhcp_option_domain: ["{{ ansible_domain }}"]
foreman_proxy_dhcp_pxeserver: "{{ ansible_fqdn }}"
foreman_proxy_dhcp_network: ""
foreman_proxy_dhcp_netmask: "255.255.252.0"

foreman_proxy_realm: "true"
foreman_proxy_realm_provider: "freeipa"
foreman_proxy_realm_keytab: "/etc/foreman-proxy/freeipa.keytab"
foreman_proxy_realm_principal: "realm-capsule"
foreman_proxy_puppet: "false"
puppet_enable_puppet_server: "false"

# used in post installation configuration
# What defines a repo is its organization, product, repository set name, architecture and release version
# These are needed to synch. See README.md for more information on determining these values
setup_hammer: "true"

upload_manifest: "true"
manifest_src_location: "/root/bootstrap_manifest.zip"

setup_repositories: "true"
repos_mandatory:
   - name: "Red Hat Enterprise Linux 7 Server (RPMs)"
     product: "Red Hat Enterprise Linux Server"
     basearch: "x86_64"
     releasever: "7Server"

# 7 Server and the latest minor release will point to the same files on the back end
# We will make a RHEL7 7Server OS
   - name: "Red Hat Enterprise Linux 7 Server (Kickstart)"
     product: "Red Hat Enterprise Linux Server"
     basearch: "x86_64"
     releasever: "7Server"

# It seems we will have to add this later, there is some dependency we don't understand
#   - name: "Red Hat Enterprise Linux 7 Server (Kickstart)"
#     product: "Red Hat Enterprise Linux Server"
#     basearch: "x86_64"
#     releasever: "7.6"

   - name: "Red Hat Ansible Engine 2.7 RPMs for Red Hat Enterprise Linux 7 Server"
     product: "Red Hat Ansible Engine"
     basearch: "x86_64"
     releasever: ""

   - name: "Red Hat Enterprise Linux 7 Server - Extras (RPMs)"
     product: "Red Hat Enterprise Linux Server"
     basearch: "x86_64"
     releasever: ""

   - name: "Red Hat Enterprise Linux 7 Server - RH Common (RPMs)"
     product: "Red Hat Enterprise Linux Server"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Enterprise Linux 7 Server - Optional (RPMs)"
     product: "Red Hat Enterprise Linux Server"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Enterprise Virtualization Hypervisor 7 (RPMs)"
     product: "Red Hat Virtualization"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Virtualization Manager v4.2 (RHEL 7 Server) (RPMs)"
     product: "Red Hat Virtualization Manager"
     basearch: "x86_64"
     releasever: ""

   - name: "Red Hat Virtualization 4 Management Agents for RHEL 7 (RPMs)"
     product: "Red Hat Virtualization"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Virtualization Manager 4 Tools (RHEL 7 Server) (RPMs)"
     product: "Red Hat Virtualization Manager"
     basearch: "x86_64"
     releasever: ""

   - name: "Red Hat Gluster Storage 3 Server (RPMs)"
     product: "Red Hat Gluster Storage Server for On-premise"
     basearch: "x86_64"
     releasever: "7Server"

repos_optional:
   - name: "Red Hat OpenShift Container Platform 3.11 (RPMs)"
     product: "Red Hat OpenShift Container Platform"
     basearch: "x86_64"
     releasever: ""

   - name: "Red Hat CloudForms Management Engine 5.9 (RPMs)"
     product: "Red Hat CloudForms"
     basearch: "x86_64"
     releasever: ""

#   - name: "Red Hat Enterprise Linux High Availability (for RHEL 7 Server) (RPMs)"
#     product: "Red Hat Enterprise Linux High Availability (for RHEL Server)"
#     basearch: "x86_64"
#     releasever: "7Server"

#   - name: "Red Hat Enterprise Linux Resilient Storage (for RHEL 7 Server) (RPMs)"
#     product: "Red Hat Enterprise Linux Resilient Storage (for RHEL Server)"
#     basearch: "x86_64"
#     releasever: "7Server"

   - name: "Red Hat Gluster Storage 3 NFS (RPMs)"
     product: "Red Hat Gluster Storage Server for On-premise"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Gluster Storage 3 Samba (for RHEL 7 Server) (RPMs)"
     product: "Red Hat Gluster Storage Server for On-premise"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Gluster Storage 3 Big Data (RPMs)"
     product: "Red Hat Gluster Storage Server for On-premise"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Gluster Storage 3 Splunk (RPMs)"
     product: "Red Hat Gluster Storage Server for On-premise"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Gluster Storage 3 Nagios (RPMs)"
     product: "Red Hat Gluster Storage Nagios Server"
     basearch: "x86_64"
     releasever: "7Server"


setup_lifecycle_environments: "true"
lifecycle_environments:
   - name: "Dev"
     label: "Dev"
     desc: "Our Development Servers - {{ builder_run_tag }}"
     org: "Default Organization"
     prior: "Library"

   - name: "QA"
     label: "QA"
     desc: "Our Quality Assurance Servers - {{ builder_run_tag }}"
     org: "Default Organization"
     prior: "Dev"

   - name: "Prod"
     label: "Prod"
     desc: "Our Production Servers - {{ builder_run_tag }}"
     org: "Default Organization"
     prior: "QA"

   - name: "Retired"
     label: "Retired"
     desc: "Our Retired Servers - {{ builder_run_tag }}"
     org: "Default Organization"
     prior: "Prod"

setup_base_soe_cv: "true"
errata_end_date: "2019-01-01"
cvs_mandatory:
  - name: SOE_RHEL
    desc: "Our Red Hat Enterprise Linux Standard Operating Environment Content - {{ builder_run_tag }}"
    org: "Default Organization"
    repositories:
    - "Red Hat Ansible Engine 2.7 RPMs for Red Hat Enterprise Linux 7 Server x86_64"
    - "Red Hat Satellite Tools 6.4 for RHEL 7 Server RPMs x86_64"
    - "Red Hat Enterprise Linux 7 Server - Extras RPMs x86_64"
    - "Red Hat Enterprise Linux 7 Server - Optional RPMs x86_64 7Server"
    - "Red Hat Enterprise Linux 7 Server - RH Common RPMs x86_64 7Server"
    - "Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server"
    filters:
    - name: "IncludePackagesNoErrata"
      type: "rpm"
      inclusion: "true"
      desc: "Include all packages with no errata for all repositories"
      originalpackages: "true"
      repositories: "all"
    - name: "IncludeErrataByDate"
      type: "erratum"
      inclusion: "true"
      desc: "Include all errata updated as of the 1st of the month"
      repositories: "all"
      rules:
      - name: "errata-by-date-{{ errata_end_date }}"
        enddate: "2019-01-01"
        datetype: "issued"
        types:
        - "enhancement"
        - "bugfix"
        - "security"
    - name: "NoFireFox"
      type: "rpm"
      inclusion: "false"
      desc: "Do provide Firefox to be installed on servers"
      originalpackages: "true"
      repositories: "all"
      rules:
      - name: "firefox*"
        basearch: "x86_64"

cvs_optional:
  - name: OCP3
    desc: "Our Current OpenShift Container Platform Content - {{ builder_run_tag }}"
    org: "Default Organization"
    repositories:
    - "Red Hat OpenShift Application Runtimes Node.js v10 RPMs x86_64"
    - "Red Hat Enterprise Linux Fast Datapath RHEL 7 Server RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Server RPMs x86_64 7Server"
    - "Red Hat OpenShift Container Platform 3.11 RPMs x86_64"
    - "Single Sign-On 7.1 RHEL 7 Server RPMs x86_64"
    filters:
    - name: "IncludePackagesNoErrata"
      type: "rpm"
      inclusion: "true"
      desc: "Include all packages with no errata for all repositories"
      originalpackages: "true"
      repositories: "all"
    - name: "IncludeErrataByDate"
      type: "erratum"
      inclusion: "true"
      desc: "Include all errata updated as of the 1st of the month"
      repositories: "all"
      rules:
      - name: "errata-by-date-{{ errata_end_date }}"
        enddate: "2019-01-01"
        datetype: "issued"
        types:
        - "enhancement"
        - "bugfix"
        - "security"

  - name: RHS_Gluster
    desc: "Our Current Non-Hyperconverged Gluster Content - {{ builder_run_tag }}"
    org: "Default Organization"
    repositories:
    - "Red Hat Storage Console Main for Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server"
    - "Red Hat Storage Console Installer for Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server"
    - "Red Hat Storage Console Agent for Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Splunk RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Server RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Samba for RHEL 7 Server RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 NFS RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Nagios RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Console RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Big Data RPMs x86_64 7Server"
    filters:
    - name: "IncludePackagesNoErrata"
      type: "rpm"
      inclusion: "true"
      desc: "Include all packages with no errata for all repositories"
      originalpackages: "true"
      repositories: "all"
    - name: "IncludeErrataByDate"
      type: "erratum"
      inclusion: "true"
      desc: "Include all errata updated as of the 1st of the month"
      repositories: "all"
      rules:
      - name: "errata-by-date-{{ errata_end_date }}"
        enddate: "2019-01-01"
        datetype: "issued"
        types:
        - "enhancement"
        - "bugfix"
        - "security"

  - name: RHVH
    desc: "Our Current RHEV Hypervisor Content - {{ builder_run_tag }}"
    org: "Default Organization"
    repositories:
    - "Red Hat Satellite Tools 6.4 for RHEL 7 Server RPMs x86_64"
    - "Red Hat Ansible Engine 2.7 RPMs for Red Hat Enterprise Linux 7 Server x86_64"
    - "Red Hat Virtualization Host 7 RPMs x86_64"
    - "Red Hat Virtualization Host 7 Build RPMs x86_64"
    filters:
    - name: "IncludePackagesNoErrata"
      type: "rpm"
      inclusion: "true"
      desc: "Include all packages with no errata for all repositories"
      originalpackages: "true"
      repositories: "all"
    - name: "IncludeErrataByDate"
      type: "erratum"
      inclusion: "true"
      desc: "Include all errata updated as of the 1st of the month"
      repositories: "all"
      rules:
      - name: "errata-by-date-{{ errata_end_date }}"
        enddate: "2019-01-01"
        datetype: "issued"
        types:
        - "enhancement"
        - "bugfix"
        - "security"

  - name: RHVM
    desc: "Our Current RHEV Manager Content - {{ builder_run_tag }}"
    org: "Default Organization"
    repositories:
    - "JBoss Enterprise Application Platform 7 RHEL 7 Server RPMs x86_64 7Server"
    - "Red Hat Virtualization Manager v4.2 RHEL 7 Server RPMs x86_64"
    - "Red Hat Virtualization Host 7 Build RPMs x86_64"
    - "Red Hat Virtualization Manager 4 Tools RHEL 7 Server RPMs x86_64"
    filters:
    - name: "IncludePackagesNoErrata"
      type: "rpm"
      inclusion: "true"
      desc: "Include all packages with no errata for all repositories"
      originalpackages: "true"
      repositories: "all"
    - name: "IncludeErrataByDate"
      type: "erratum"
      inclusion: "true"
      desc: "Include all errata updated as of the 1st of the month"
      repositories: "all"
      rules:
      - name: "errata-by-date-{{ errata_end_date }}"
        enddate: "2019-01-01"
        datetype: "issued"
        types:
        - "enhancement"
        - "bugfix"
        - "security"

ccvs_mandatory:
  - name: SOE_OCP
    desc: "Our Current OpenShift Standard Operating Environment Content - {{ builder_run_tag }}"
    org: "Default Organization"
    components:
    - "SOE_RHEL"
    - "OCP3"
    - "RHS_Gluster"

  - name: SOE_RHVM
    desc: "Our Current RHV Manager Standard Operating Environment Content - {{ builder_run_tag }}"
    org: "Default Organization"
    components:
    - "SOE_RHEL"
    - "RHVM"
    - "RHS_Gluster"

  - name: SOE_RHVH_HC
    desc: "Our Current RHV Hyperconverged Infrastructure Standard Operating Environment Content - {{ builder_run_tag }}"
    org: "Default Organization"
    components:
    - "RHVH"
    - "RHS_Gluster"

ccvs_optional:
# TODO: Add the MSSQL content view and component
  - name: SOE_MSSQL
    desc: "Our Current MSSQL on Linux Standard Operating Environment Content - {{ builder_run_tag }}"
    org: "Default Organization"
    components:
    - "SOE_RHEL"


setup_sync_plans: "true"
sync_plans_mandatory:
  - name: nightly_os
    desc: "Nightly OS repo sync - 00:30 - {{ builder_run_tag }}"
    interval: "daily"
    sync_date: "{{ ansible_date_time.date }} 00:30:00"
    enabled: true
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"

  - name: nightly_infra
    desc: "Nightly non-OS repo sync - 01:30 {{ builder_run_tag }}"
    interval: "daily"
    sync_date: "{{ ansible_date_time.date }} 01:30:00"
    enabled: "true"
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"


setup_products: true
custom_products:
  - name: ocp_images
    desc: "Our OpenShift Container Platform container images - {{ builder_run_tag }}"
    org: "Default Organization"
    label: ocp_images
    repository_name:
    - name: ose-ansible
      upstream_name: openshift3/ose-ansible
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-web-console
      upstream_name: openshift3/ose-web-console
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-cluster-capacity
      upstream_name: openshift3/ose-cluster-capacity
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-deployer
      upstream_name: openshift3/ose-deployer
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-docker-builder
      upstream_name: openshift3/ose-docker-builder
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: oauth-proxy
      upstream_name: openshift3/oauth-proxy
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-docker-registry
      upstream_name: openshift3/ose-docker-registry
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-egress-http-proxy
      upstream_name: openshift3/ose-egress-http-proxy
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-egress-router
      upstream_name: openshift3/ose-egress-router
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-f5-router
      upstream_name: openshift3/ose-f5-router
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-haproxy-router
      upstream_name: openshift3/ose-haproxy-router
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-keepalived-ipfailover
      upstream_name: openshift3/ose-keepalived-ipfailover
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-pod
      upstream_name: openshift3/ose-pod
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-sti-builder
      upstream_name: openshift3/ose-sti-builder
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose
      upstream_name: openshift3/ose
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: container-engine
      upstream_name: openshift3/container-engine
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: node
      upstream_name: openshift3/node
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: openvswitch
      upstream_name: openshift3/openvswitch
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: etcd
      upstream_name: rhel7/etcd
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-recycler
      upstream_name: openshift3/ose-recycler
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: logging-auth-proxy
      upstream_name: openshift3/logging-auth-proxy
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: logging-curator
      upstream_name: openshift3/logging-curator
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: logging-elasticsearch
      upstream_name: openshift3/logging-elasticsearch
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: logging-fluentd
      upstream_name: openshift3/logging-fluentd
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: logging-kibana
      upstream_name: openshift3/logging-kibana
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: metrics-cassandra
      upstream_name: openshift3/metrics-cassandra
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: metrics-hawkular-metrics
      upstream_name: openshift3/metrics-hawkular-metrics
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: metrics-hawkular-openshift-agent
      upstream_name: openshift3/metrics-hawkular-openshift-agent
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: metrics-heapster
      upstream_name: openshift3/metrics-heapster
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: prometheus
      upstream_name: openshift3/prometheus
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: prometheus-alert-buffer
      upstream_name: openshift3/prometheus-alert-buffer
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: prometheus-alertmanager
      upstream_name: openshift3/prometheus-alertmanager
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: prometheus-node-exporter
      upstream_name: openshift3/prometheus-node-exporter
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-openshift-postgresql
      upstream_name: cloudforms46/cfme-openshift-postgresql
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-openshift-memcached
      upstream_name: cloudforms46/cfme-openshift-memcached
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-openshift-app-ui
      upstream_name: cloudforms46/cfme-openshift-app-ui
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-openshift-app
      upstream_name: cloudforms46/cfme-openshift-app
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-openshift-embedded-ansible
      upstream_name: cloudforms46/cfme-openshift-embedded-ansible
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-openshift-httpd
      upstream_name: cloudforms46/cfme-openshift-httpd
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-httpd-configmap-generator
      upstream_name: cloudforms46/cfme-httpd-configmap-generator
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: rhgs-server-rhel7
      upstream_name: rhgs3/rhgs-server-rhel7
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: rhgs-volmanager-rhel7
      upstream_name: rhgs3/rhgs-volmanager-rhel7
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: rhgs-gluster-block-prov-rhel7
      upstream_name: rhgs3/rhgs-gluster-block-prov-rhel7
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: rhgs-s3-server-rhel7
      upstream_name: rhgs3/rhgs-s3-server-rhel7
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-service-catalog
      upstream_name: openshift3/ose-service-catalog
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-ansible-service-broker
      upstream_name: openshift3/ose-ansible-service-broker
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: mediawiki-apb
      upstream_name: openshift3/mediawiki-apb
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: postgresql-apb
      upstream_name: openshift3/postgresql-apb
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"


setup_attach_plan_to_product: "true"
product_plan:
  - name: "ocp_images"
    plan: "nightly_infra"
    organization: "{{ foreman_initial_organization }}"
  - name: "Red Hat Ansible Engine"          
    plan: "nightly_infra"
    organization: "{{ foreman_initial_organization }}"
  - name: "Red Hat CloudForms"
    plan: "nightly_infra"
    organization: "{{ foreman_initial_organization }}"
  - name: "Red Hat Enterprise Linux Server"
    plan: "nightly_infra"
    organization: "{{ foreman_initial_organization }}"
  - name: "Red Hat Gluster Storage Nagios Server"
    plan: "nightly_os"
    organization: "{{ foreman_initial_organization }}"
  - name: "Red Hat Gluster Storage Server for On-premise"
    plan: "nightly_infra"
    organization: "{{ foreman_initial_organization }}"
  - name: "Red Hat OpenShift Container Platform"
    plan: "nightly_infra"
    organization: "{{ foreman_initial_organization }}"
  - name: "Red Hat Virtualization"
    plan: "nightly_infra"
    organization: "{{ foreman_initial_organization }}"
  - name: "Red Hat Virtualization Manager"
    plan: "nightly_infra"
    organization: "{{ foreman_initial_organization }}"

setup_general_settings: "false"

setup_organizations: "false"
# Parameters?

setup_locations: "false"
# Paramters? Yes!

setup_users: "false"
setup_groups: "false"
setup_roles: "false"

# PUT YOUR MANDATORY MEDIA DEFINITIONS IN HERE - stuff required for your initial builders 
# OR BEST PRACTICE IS ADD YOUR OWN FOREMAN_POST to your builder.
# DO NOT REMOVE RHEL OR RHVH
setup_mandatory_media: "true"
media_mandatory:
  - name: RHEL7Server
    os_family: Redhat
    path: "http://{{ ansible_fqdn }}/pulp/repos/{{ foreman_initial_organization | replace(' ', '_') }}/Library/content/dist/rhel/server/7/7Server/$arch/kickstart/"
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"
#  - name: RHEL7x
#    os_family: Redhat
#    path: "http://{{ ansible_fqdn }}/pulp/repos/{{ foreman_initial_organization | replace(' ', '_') }}/Library/content/dist/rhel/server/7/$major.$minor/$arch/kickstart/"
#    organization: "{{ foreman_initial_organization }}"
#    location: "{{ foreman_initial_location }}"
  - name: RHVH
    os_family: Redhat
    path: "https://{{ ansible_fqdn }}/pub/rhvh"
    create_path: true
    fetch_content: true
    content_play: "{{ role_path }}/RHVH_content.yml"
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"


# PUT YOUR MEDIA DEFINITIONS IN OPTIONAL MEDIA
setup_optional_media: "false"
media_optional:
  - name: MyOSName
    os_family: Redhat #See Docs For Valid values Red Hat only "Supports" Redhat, others work from upstream as is
    path: "https://{{ ansible_fqdn }}/some/path/can/use/foreman/vars" # where the content is or will be
    create_path: true # whether or not to create the path if it does not exist
    fetch_content: true  # whether or not to fetch content
    content_play: "{{ role_path }}/RHVH_content.yml"  # your custom content fetching play that will put content at path
    organization: "{{ foreman_initial_organization }}" # OR your organization variable org must exist
    location: "{{ foreman_initial_location }}" # OR you location variable location must exist for org above


setup_ptables: "true"
ptables_mandatory:
  - name: RHEL_SOE
    os_family: "Redhat"
    path: ptable_rhel_soe.j2
    audit_comment: "Lab Builder Base RHEL SOE Partition Table - {{ builder_run_tag }}"
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"
  - name: CPGPC
    os_family: "Redhat"
    path: ptable_cpgpc.j2
    audit_comment: "Lab Builder Common Profile for General Purpose Computing Partition Table - {{ builder_run_tag }}"
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"
  - name: OCP_SOE
    os_family: "Redhat"
    path: ptable_ocp.j2
    audit_comment: "Lab Builder OpenShift Container Platform SOE Partition Table - {{ builder_run_tag }}"
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"


setup_config_templates: "true"
# hammer template kinds
# ---------
# NAME     
# ---------
# Bootdisk # PXELinux # PXEGrub  # PXEGrub2 # iPXE  # provision
# finish   # script   # user_data# ZTP      # POAP  # kexec    
# snippet  
ctemplates_mandatory:
  - name: rhc_kickstart_default
    type: provision
    locked: false
    audit_comment: "This is a sample template - can replace base - {{ builder_run_tag }}"
    path: rhc_kickstart_default_ctemplate.j2
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"
  - name: rhc_rhvh
    type: provision
    locked: false
    audit_comment: "This is a sample template - can replace base - {{ builder_run_tag }}"
    path: rhc_rhvh_ctemplate.j2
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"

# We are going to use the Satellite included provisioning 
# templates for the Operating Systems, we may decide to customize 
# later in the project
#
setup_oss: "true"
oss_special:
  - name: "RedHat"
    title: "RedHat 7.6"
    major: 7
    minor: 6
    description: "Red Hat Base OS created by synchronization - {{ builder_run_tag }}"
    family: "Redhat"
    password_hash: "SHA256"
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"
    architectures:
      - "x86_64"
    config_templates:
      - "Kickstart default PXELinux"
      - "Kickstart default PXEGrub"
      - "Kickstart default PXEGrub2"
      - "Kickstart default iPXE"
      - "Kickstart default"
      - "Kickstart default finish"
      - "Kickstart default user data"
    media:
      - "RHEL7Server"
#      - "RHEL7x"
    ptables:
      - "Kickstart default"
      - "RHEL_SOE"
      - "CPGPC"
      - "OCP_SOE"

oss_mandatory:
  - name: "RHVH"
    major: 7
    minor: 6
    description: "Red Hat Virtualization Hypervisor - {{ builder_run_tag }}"
    family: "Redhat"
    password_hash: "SHA256"
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"
    architectures:
      - "x86_64"
    config_templates:
      - "Kickstart oVirt-RHVH PXELinux"
      - "Kickstart oVirt-RHVH"
      - "Kickstart default finish"
      - "Kickstart default user data"
    media:
      - "RHVH"
    ptables:
      - "RHVH"
    parameters:
      - name: something
        value: arbitrary
      - name: forgetting
        value: something

#  - {{ builder_run_tag }}
# We need to ensure that we have all the required configuration
# for a host group
# Currently, we are examining only one datacentre in this sample
# Larger configurations with multiple DCs can be defined
# you can configure optional domains, realms, etc.. for remotes
# if you are concerned once happy, simply remove the _optional
# tag or place it above only those that are truly optional
# (demos, toys, skunkworks, 8-)  )

# ActivationKeys
# Again, mandatory (to meet base config), optional (to add to the config - also failing will not stop build till the end of the phase)
# you can have unlimited hosts defined or max_hosts defined, not both or boom
setup_activation_keys: true
aks_mandatory:
  - name: "RHEL_SOE"
    organization: "{{ foreman_initial_organization }}"
    unlimited_hosts: true
    subscritpions:
    - name:
      qty: 1

  
setup_domains: "true"
domains_mandatory:
  - name: "{{ ansible_domain }}"
    description: "root domain for the installation"
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"

setup_realms: "true"
realms_mandatory:
  - name: "{{ ansible_domain | upper }}"
    description: "root REALM for the installation"
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"

setup_subnets: "true"
subnets_mandatory:
  - name: "Public"
    boot_mode: "Static"
    description: "Front side for client apps  - {{ builder_run_tag }}"
    network: 192.168.248.0
    prefix: 22
    mask: 255.255.252.0
    network_type: "IPv4"
    gateway: 192.168.248.1
    primary dns: 192.168.248.10
    secondary dns: 192.168.248.11
    ipam: "Internal DB"
    from: 192.168.250.1
    to: 192.168.250.254
    capsules:
      - name: "{{ ansible_fqdn }}"
        type: Discovery
      - name: "{{ ansible_fqdn }}"
        type: TFTP
      - name: "{{ ansible_fqdn }}"
        type: DNS
    domains: # The names of the domains
      - name: "{{ ansible_domain }}"
    locations: # The name of the locations
      - name: "{{ foreman_initial_location }}"
    organizations: # The name of domains
      - name: "{{ foreman_initial_domain }}"

  - name: "ProvMgtMig"
    boot_mode: "Static"
    description: "Provisioning, Migration and Management - {{ builder_run_tag }}"
    network: 192.168.148.0
    prefix: 22
    mask: 255.255.252.0
    network_type: "IPv4"
    gateway: 192.168.148.1
    ipam: "Internal DB"
    from: 192.168.148.1
    to: 192.168.148.254
    capsules: # get the ID of the tftp capsule
      - name: "{{ ansible_fqdn }}"
        type: TFTP
    locations: # The name of the locations
      - name: "{{ foreman_initial_location }}"
    organizations: # The name of domains
      - name: "{{ foreman_initial_domain }}"

  - name: "Storage"
    boot_mode: "Static"
    description: "Storage Network for Gluster and iSCSI  - {{ builder_run_tag }}"
    network: 192.168.48.0
    prefix: 22
    mask: 255.255.252.0
    network_type: "IPv4"
    gateway: 192.168.48.1
    ipam: "Internal DB"
    from: 192.168.48.1
    to: 192.168.48.254
    locations: # The name of the locations
      - name: "{{ foreman_initial_location }}"
    organizations: # The name of domains
      - name: "{{ foreman_initial_domain }}"


setup_hostgroups: "true"




# Turn on and of Discovery auto provisioning
setup_discovery: "true"
# AKA enable_all_rules is full auto deployment of infrastructure
# based totally on discovery
# some assembly required :-) you need to create the discovery rules to match your Host Groups and infrastructure limits
enable_all_rules: "false"
discovery_rules:
  - name: rhvh_node
    organization: "{{ foreman_initial_organization }}"
    location: "{{ foreman_initial_location }}"

# RHVH node basic requirements for RHHI - these will form the basis of our discovery rules
# we will create rules for each role, RHHI, OCP++, Gluster, etc..
#
# Increase the size of /var/log to 15GB to provide sufficient space for the additional logging requirements of Red Hat Gluster Storage.
# for lab deployments
# at least 4 cores
# at least 32 GB RAM
# at least 1TB storage
#
# for small deployments:
## at least 12 cores
# at least 64GB RAM
# at most 48TB storage
#
## for medium deployments:
## at least 12 cores
# at least 128GB RAM
# at most 64TB storage
##
# for large deployments:
## at least 16 cores
# at least 256GB RAM
# at most 80TB storage



#  PPPPPP   OOOOOO  WWW  WWW  WWW EEEEEEEE RRRRRRR      OOOOOO  NNNNN    NN
#  PP   PP OO    OO  WW  W W  WW  EE       RR    RR    OO    OO NN NN    NN
#  PP   PP OO    OO  WW WW WW WW  EE       RR    RR    OO    OO NN  NN   NN
#  PPPPP   OO    OO   W W   W W   EEEEEEEE RRRRRRR     OO    OO NN   NN  NN
#  PP      OO    OO   WWW   WWW   EE       RR  R       OO    OO NN   NN  NN
#  PP      OO    OO    WW   WW    EE       RR   R      OO    OO NN    NN NN
#  PP       OOOOOO     W     W    EEEEEEEE RR    R      OOOOOO  NN    NNNNN
#
#  The lab systems!!! They should discover (and optionally auto deploy) the infrastructure.

#********************************************************************
#*
#*   DEPLOY SSH KEYS AS PART OF BUILD
#    USE LABBUILDER KEYS FROM DRIVE 42
#*
#********************************************************************

setup_infrastructure: "false"
# Infrastructure Setup will now follow the RHHI Ansible Deployment
# Our goal here is to configure the pre-requisites for the deployment
# using Satellite, Ansible, and IdM and the automate the configuration
# of the deployment variables and launch the deployment
# After deployment, we will automate the verification of the deployment
# and then we will configure the cluster as a compute resource below

setup_virtwho: "false"

# This can be fleshed out after we create the bootable image
# This will get updated on launch after bootstrapping the first server
# The startup service will call git pull to update the local repository
# Compute resources can only be built after the hypervisors are deployed.
setup_compute_resources: "false"
comp_res_mandatory:
  - name: "RHV"
    type: ovirt
    controller_hostname: "your_rhvm_server_here"
    controller_username: "service_admin_name"
    controller_password: "service_password"   #Provide this as a variable in a private file
    virtwho_username: "readonly_admin_name"
    virtwho_password: "virtwho_password"    #Provide this as a variable in a private file - will be encrypted.

comp_res_optional:
  - name: "VMware"
    type: "esx"
    controller_hostname: "your_vcentre_server_here"
    controller_username: "service_admin_name"
    controller_password: "service_password"   #Provide this as a variable in a private file - will be encryped.
    virtwho_username: "readonly_admin_name"
    virtwho_password: "virtwho_password"    #Provide this as a variable in a private file - will be encrypted.

setup_oscap: "false"

