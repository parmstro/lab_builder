# The real way to do this is to take a json dump of a foreman environment
# and then feed that to an ansible play to recreate. 
# cdn_username and cdn_password are required 
# when adding OCP Images as custom products as below. This is needed for registry.redhat.io
bootstrap_add_utils:
  - bind-utils
  - screen

# used for preparing the Satellite Server
sat_firewalld_zone: "public"


# The IPA client can only be configured after the IPA Server is installed
# We will ues these values after the Satellite and IPA serves are bootstrapped
ipa_install_client: true
ipa_generate_certs: true
ipa_server_certs_dir: "/etc/ipa/private/"
ipa_server_pem_file: "{{ ipa_server_certs_dir }}{{ ansible_fqdn }}.pem"
ipa_server_crt_file: "{{ ipa_server_certs_dir }}{{ ansible_fqdn }}.crt"
ipa_server_key_file: "{{ ipa_server_certs_dir }}{{ ansible_fqdn }}.key"
ipa_server_csr_file: "{{ ipa_server_certs_dir }}{{ ansible_fqdn }}.csr"
ipa_server_ca_file: "/etc/ipa/ca.crt"
# ipa_rsa_key_pass is defined in password_vars.yml for random password generation
# configure password_vars.yml to set the password to a known value
ipa_organization_name: "{{ ansible_domain | upper }}"
ipa_ou_name: "Demo Lab"
ipa_locality_name: "Hespeler"
ipa_prov_name: "ON"
ipa_country_name: "CA"
ipa_email_address: "admin@{{ ansible_domain }}"
ipa_service_type: "HTTP"

# used for installing the Satellite Server
# See template file in ../roles/satellite/templates/satellite-answers.yml
scenario: "satellite"
# the following 2 keys are unused now that registration is managed in prepare
# for bootstrap hosts
# redhat_org: "6856506"
# activation_key: "satbootstrap"
cdn_proxy_hostname: ""
cdn_proxy_port: ""
cdn_proxy_username: ""
cdn_proxy_password: ""
certs_node_fqdn: "{{ ansible_fqdn }}"
certs_ca_common_name: "{{ ansible_fqdn }}"
foreman_foreman_url: "https://{{ ansible_fqdn }}"
foreman_servername: "{{ ansible_fqdn }}"
foreman_server_ssl_ca: "/etc/pki/katello/certs/katello-default-ca.crt"
foreman_server_ssl_chain: "/etc/pki/katello/certs/katello-server-ca.crt"
foreman_server_ssl_cert: "/etc/pki/katello/certs/katello-apache.crt"
foreman_server_ssl_certs_dir: "/etc/pki/tls/certs"
foreman_server_ssl_key: "/etc/pki/katello/private/katello-apache.key"
foreman_server_ssl_crl: "false"
foreman_admin_username: "admin"
foreman_admin_password: "{{ sat_admin }}"
foreman_admin_firstname: "admin"
foreman_admin_lastname: "istrator"
foreman_admin_email: "admin@{{ ansible_domain }}"
foreman_initial_organization: "Default Organization"
foreman_initial_location: "Default Location"
foreman_ipa_authentication: "true"
foreman_compute_ec2: "true"
foreman_compute_gce: "true"
foreman_compute_libvirt: "true"
foreman_compute_openstack: "true"
foreman_compute_ovirt: "true"
foreman_compute_rackspace: "true"
foreman_compute_vmware: "true"

foreman_puppet_ca: "false"
foreman_puppet: "false"

foreman_proxy_tftp: "true"
foreman_proxy_tftp_servername: "{{ ansible_fqdn }}"

foreman_proxy_dns: "false"
foreman_proxy_dns_interface: "discover"
foreman_proxy_dns_zone: "{{ ansible_domain }}"
foreman_proxy_dns_forwarders: ""
foreman_proxy_dns_reverse: "192.168.in-addr.arpa"

foreman_proxy_dhcp: "false"
foreman_proxy_dhcp_interface: "{{ ansible_facts.interfaces | select('match', '^(e)+') | list | first }}"
foreman_proxy_dhcp_range: "192.168.254.172 192.168.254.204" 
foreman_proxy_dhcp_gateway: "192.168.252.1"
foreman_proxy_dhcp_nameservers: "192.168.252.10" 
foreman_proxy_dhcp_option_domain: ["{{ ansible_domain }}"]
foreman_proxy_dhcp_pxeserver: "{{ ansible_fqdn }}"
foreman_proxy_dhcp_network: ""
foreman_proxy_dhcp_netmask: "255.255.252.0"

foreman_proxy_realm: "true"
foreman_proxy_realm_provider: "freeipa"
foreman_proxy_realm_keytab: "/etc/foreman-proxy/freeipa.keytab"
foreman_proxy_realm_principal: "realm-capsule"
foreman_proxy_puppet: "false"
puppet_enable_puppet_server: "false"

# used in post installation configuration
# What defines a repo is its organization, product, repository set name, architecture and release version
# These are needed to synch. See README.md for more information on determining these values
setup_hammer: "true"

upload_manifest: "true"
manifest_src_location: "/root/bootstrap_manifest.zip"

setup_repositories: "true"
repos_mandatory:
   - name: "Red Hat Enterprise Linux 7 Server (RPMs)"
     product: "Red Hat Enterprise Linux Server"
     basearch: "x86_64"
     releasever: "7Server"
   
   - name: "Red Hat Enterprise Linux 7 Server (Kickstart)"
     product: "Red Hat Enterprise Linux Server"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Ansible Engine 2.7 RPMs for Red Hat Enterprise Linux 7 Server"
     product: "Red Hat Ansible Engine"
     basearch: "x86_64"
     releasever: ""

   - name: "Red Hat Enterprise Linux 7 Server - Extras (RPMs)"
     product: "Red Hat Enterprise Linux Server"
     basearch: "x86_64"
     releasever: ""

   - name: "Red Hat Enterprise Linux 7 Server - RH Common (RPMs)"
     product: "Red Hat Enterprise Linux Server"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Enterprise Linux 7 Server - Optional (RPMs)"
     product: "Red Hat Enterprise Linux Server"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Enterprise Virtualization Hypervisor 7 (RPMs)"
     product: "Red Hat Virtualization"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Virtualization Manager v4.2 (RHEL 7 Server) (RPMs)"
     product: "Red Hat Virtualization Manager"
     basearch: "x86_64"
     releasever: ""

   - name: "Red Hat Virtualization 4 Management Agents for RHEL 7 (RPMs)"
     product: "Red Hat Virtualization"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Virtualization Manager 4 Tools (RHEL 7 Server) (RPMs)"
     product: "Red Hat Virtualization Manager"
     basearch: "x86_64"
     releasever: ""

   - name: "Red Hat Gluster Storage 3 Server (RPMs)"
     product: "Red Hat Gluster Storage Server for On-premise"
     basearch: "x86_64"
     releasever: "7Server"

repos_optional:
   - name: "Red Hat OpenShift Container Platform 3.11 (RPMs)"
     product: "Red Hat OpenShift Container Platform"
     basearch: "x86_64"
     releasever: ""

   - name: "Red Hat CloudForms Management Engine 5.9 (RPMs)"
     product: "Red Hat CloudForms"
     basearch: "x86_64"
     releasever: ""

   - name: "Red Hat Enterprise Linux High Availability (for RHEL 7 Server) (RPMs)"
     product: "Red Hat Enterprise Linux High Availability (for RHEL Server)"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Enterprise Linux Resilient Storage (for RHEL 7 Server) (RPMs)"
     product: "Red Hat Enterprise Linux Resilient Storage (for RHEL Server)"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Gluster Storage 3 NFS (RPMs)"
     product: "Red Hat Gluster Storage Server for On-premise"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Gluster Storage 3 Samba (for RHEL 7 Server) (RPMs)"
     product: "Red Hat Gluster Storage Server for On-premise"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Gluster Storage 3 Big Data (RPMs)"
     product: "Red Hat Gluster Storage Server for On-premise"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Gluster Storage 3 Splunk (RPMs)"
     product: "Red Hat Gluster Storage Server for On-premise"
     basearch: "x86_64"
     releasever: "7Server"

   - name: "Red Hat Gluster Storage 3 Nagios (RPMs)"
     product: "Red Hat Gluster Storage Nagios Server"
     basearch: "x86_64"
     releasever: "7Server"


setup_lifecycle_environments: "true"
lifecycle_environments:
   - name: "Dev"
     label: "Dev"
     desc: "Our Development Servers"
     org: "Default Organization"
     prior: "Library"

   - name: "QA"
     label: "QA"
     desc: "Our Quality Assurance Servers"
     org: "Default Organization"
     prior: "Dev"

   - name: "Prod"
     label: "Prod"
     desc: "Our Production Servers"
     org: "Default Organization"
     prior: "QA"

   - name: "Retired"
     label: "Retired"
     desc: "Our Retired Servers"
     org: "Default Organization"
     prior: "Prod"

setup_base_soe_cv: "true"
errata_end_date: "2019-01-01"
cvs_mandatory:
  - name: SOE_RHEL
    desc: "Our Red Hat Enterprise Linux Standard Operating Environment Content"
    org: "Default Organization"
    repositories:
    - "Red Hat Ansible Engine 2.7 RPMs for Red Hat Enterprise Linux 7 Server x86_64"
    - "Red Hat Satellite Tools 6.4 for RHEL 7 Server RPMs x86_64"
    - "Red Hat Enterprise Linux 7 Server - Extras RPMs x86_64"
    - "Red Hat Enterprise Linux 7 Server Kickstart x86_64 7Server"
    - "Red Hat Enterprise Linux 7 Server - Optional RPMs x86_64 7Server"
    - "Red Hat Enterprise Linux 7 Server - RH Common RPMs x86_64 7Server"
    - "Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server"
    filters:
    - name: "IncludePackagesNoErrata"
      type: "rpm"
      inclusion: "true"
      desc: "Include all packages with no errata for all repositories"
      originalpackages: "true"
      repositories: "all"
    - name: "IncludeErrataByDate"
      type: "erratum"
      inclusion: "true"
      desc: "Include all errata updated as of the 1st of the month"
      repositories: "all"
      rules:
      - name: "errata-by-date-{{ errata_end_date }}"
        enddate: "2019-01-01"
        datetype: "issued"
        types:
        - "enhancement"
        - "bugfix"
        - "security"
    - name: "NoFireFox"
      type: "rpm"
      inclusion: "false"
      desc: "Do provide Firefox to be installed on servers"
      originalpackages: "true"
      repositories: "all"
      rules:
      - name: "firefox*"
        basearch: "x86_64"

cvs_optional:
  - name: OCP3
    desc: "Our Current OpenShift Container Platform Content"
    org: "Default Organization"
    repositories:
    - "Red Hat OpenShift Application Runtimes Node.js v10 RPMs x86_64"
    - "Red Hat Enterprise Linux Fast Datapath RHEL 7 Server RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Server RPMs x86_64 7Server"
    - "Red Hat OpenShift Container Platform 3.11 RPMs x86_64"
    - "Single Sign-On 7.1 RHEL 7 Server RPMs x86_64"
    filters:
    - name: "IncludePackagesNoErrata"
      type: "rpm"
      inclusion: "true"
      desc: "Include all packages with no errata for all repositories"
      originalpackages: "true"
      repositories: "all"
    - name: "IncludeErrataByDate"
      type: "erratum"
      inclusion: "true"
      desc: "Include all errata updated as of the 1st of the month"
      repositories: "all"
      rules:
      - name: "errata-by-date-{{ errata_end_date }}"
        enddate: "2019-01-01"
        datetype: "issued"
        types:
        - "enhancement"
        - "bugfix"
        - "security"

  - name: RHS_Gluster
    desc: "Our Current Non-Hyperconverged Gluster Content"
    org: "Default Organization"
    repositories:
    - "Red Hat Storage Console Main for Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server"
    - "Red Hat Storage Console Installer for Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server"
    - "Red Hat Storage Console Agent for Red Hat Enterprise Linux 7 Server RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Splunk RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Server RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Samba for RHEL 7 Server RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 NFS RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Nagios RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Console RPMs x86_64 7Server"
    - "Red Hat Gluster Storage 3.1 Big Data RPMs x86_64 7Server"
    filters:
    - name: "IncludePackagesNoErrata"
      type: "rpm"
      inclusion: "true"
      desc: "Include all packages with no errata for all repositories"
      originalpackages: "true"
      repositories: "all"
    - name: "IncludeErrataByDate"
      type: "erratum"
      inclusion: "true"
      desc: "Include all errata updated as of the 1st of the month"
      repositories: "all"
      rules:
      - name: "errata-by-date-{{ errata_end_date }}"
        enddate: "2019-01-01"
        datetype: "issued"
        types:
        - "enhancement"
        - "bugfix"
        - "security"

  - name: RHVH
    desc: "Our Current RHEV Hypervisor Content"
    org: "Default Organization"
    repositories:
    - "Red Hat Satellite Tools 6.4 for RHEL 7 Server RPMs x86_64"
    - "Red Hat Ansible Engine 2.7 RPMs for Red Hat Enterprise Linux 7 Server x86_64"
    - "Red Hat Virtualization Host 7 RPMs x86_64"
    - "Red Hat Virtualization Host 7 Build RPMs x86_64"
    filters:
    - name: "IncludePackagesNoErrata"
      type: "rpm"
      inclusion: "true"
      desc: "Include all packages with no errata for all repositories"
      originalpackages: "true"
      repositories: "all"
    - name: "IncludeErrataByDate"
      type: "erratum"
      inclusion: "true"
      desc: "Include all errata updated as of the 1st of the month"
      repositories: "all"
      rules:
      - name: "errata-by-date-{{ errata_end_date }}"
        enddate: "2019-01-01"
        datetype: "issued"
        types:
        - "enhancement"
        - "bugfix"
        - "security"

  - name: RHVM
    desc: "Our Current RHEV Manager Content"
    org: "Default Organization"
    repositories:
    - "JBoss Enterprise Application Platform 7 RHEL 7 Server RPMs x86_64 7Server"
    - "Red Hat Virtualization Manager v4.2 RHEL 7 Server RPMs x86_64"
    - "Red Hat Virtualization Host 7 Build RPMs x86_64"
    - "Red Hat Virtualization Manager 4 Tools RHEL 7 Server RPMs x86_64"
    filters:
    - name: "IncludePackagesNoErrata"
      type: "rpm"
      inclusion: "true"
      desc: "Include all packages with no errata for all repositories"
      originalpackages: "true"
      repositories: "all"
    - name: "IncludeErrataByDate"
      type: "erratum"
      inclusion: "true"
      desc: "Include all errata updated as of the 1st of the month"
      repositories: "all"
      rules:
      - name: "errata-by-date-{{ errata_end_date }}"
        enddate: "2019-01-01"
        datetype: "issued"
        types:
        - "enhancement"
        - "bugfix"
        - "security"

ccvs_mandatory:
  - name: SOE_OCP
    desc: "Our Current OpenShift Standard Operating Environment Content"
    org: "Default Organization"
    components:
    - "SOE_RHEL"
    - "OCP3"
    - "RHS_Gluster"

  - name: SOE_RHVM
    desc: "Our Current RHV Manager Standard Operating Environment Content"
    org: "Default Organization"
    components:
    - "SOE_RHEL"
    - "RHVM"
    - "RHS_Gluster"

  - name: SOE_RHVH_HC
    desc: "Our Current RHV Hyperconverged Infrastructure Standard Operating Environment Content"
    org: "Default Organization"
    components:
    - "RHVH"
    - "RHS_Gluster"

ccvs_optional:
# TODO: Add the MSSQL content view and component
  - name: SOE_MSSQL
    desc: "Our Current MSSQL on Linux Standard Operating Environment Content"
    org: "Default Organization"
    components:
    - "SOE_RHEL"

setup_custom_products: true
custom_products:
  - name: ocp_images
    desc: "Our OpenShift Container Platform container images"
    org: "Default Organization"
    label: ocp_images
    repository_name:
    - name: ose-ansible
      upstream_name: openshift3/ose-ansible
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-web-console
      upstream_name: openshift3/ose-web-console
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-cluster-capacity
      upstream_name: openshift3/ose-cluster-capacity
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-deployer
      upstream_name: openshift3/ose-deployer
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-docker-builder
      upstream_name: openshift3/ose-docker-builder
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: oauth-proxy
      upstream_name: openshift3/oauth-proxy
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-docker-registry
      upstream_name: openshift3/ose-docker-registry
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-egress-http-proxy
      upstream_name: openshift3/ose-egress-http-proxy
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-egress-router
      upstream_name: openshift3/ose-egress-router
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-f5-router
      upstream_name: openshift3/ose-f5-router
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-haproxy-router
      upstream_name: openshift3/ose-haproxy-router
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-keepalived-ipfailover
      upstream_name: openshift3/ose-keepalived-ipfailover
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-pod
      upstream_name: openshift3/ose-pod
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-sti-builder
      upstream_name: openshift3/ose-sti-builder
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose
      upstream_name: openshift3/ose
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: container-engine
      upstream_name: openshift3/container-engine
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: node
      upstream_name: openshift3/node
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: openvswitch
      upstream_name: openshift3/openvswitch
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: etcd
      upstream_name: rhel7/etcd
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-recycler
      upstream_name: openshift3/ose-recycler
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: logging-auth-proxy
      upstream_name: openshift3/logging-auth-proxy
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: logging-curator
      upstream_name: openshift3/logging-curator
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: logging-elasticsearch
      upstream_name: openshift3/logging-elasticsearch
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: logging-fluentd
      upstream_name: openshift3/logging-fluentd
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: logging-kibana
      upstream_name: openshift3/logging-kibana
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: metrics-cassandra
      upstream_name: openshift3/metrics-cassandra
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: metrics-hawkular-metrics
      upstream_name: openshift3/metrics-hawkular-metrics
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: metrics-hawkular-openshift-agent
      upstream_name: openshift3/metrics-hawkular-openshift-agent
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: metrics-heapster
      upstream_name: openshift3/metrics-heapster
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: prometheus
      upstream_name: openshift3/prometheus
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: prometheus-alert-buffer
      upstream_name: openshift3/prometheus-alert-buffer
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: prometheus-alertmanager
      upstream_name: openshift3/prometheus-alertmanager
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: prometheus-node-exporter
      upstream_name: openshift3/prometheus-node-exporter
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-openshift-postgresql
      upstream_name: cloudforms46/cfme-openshift-postgresql
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-openshift-memcached
      upstream_name: cloudforms46/cfme-openshift-memcached
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-openshift-app-ui
      upstream_name: cloudforms46/cfme-openshift-app-ui
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-openshift-app
      upstream_name: cloudforms46/cfme-openshift-app
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-openshift-embedded-ansible
      upstream_name: cloudforms46/cfme-openshift-embedded-ansible
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-openshift-httpd
      upstream_name: cloudforms46/cfme-openshift-httpd
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: cfme-httpd-configmap-generator
      upstream_name: cloudforms46/cfme-httpd-configmap-generator
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: rhgs-server-rhel7
      upstream_name: rhgs3/rhgs-server-rhel7
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: rhgs-volmanager-rhel7
      upstream_name: rhgs3/rhgs-volmanager-rhel7
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: rhgs-gluster-block-prov-rhel7
      upstream_name: rhgs3/rhgs-gluster-block-prov-rhel7
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: rhgs-s3-server-rhel7
      upstream_name: rhgs3/rhgs-s3-server-rhel7
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-service-catalog
      upstream_name: openshift3/ose-service-catalog
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: ose-ansible-service-broker
      upstream_name: openshift3/ose-ansible-service-broker
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: mediawiki-apb
      upstream_name: openshift3/mediawiki-apb
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"
    - name: postgresql-apb
      upstream_name: openshift3/postgresql-apb
      repository_content_type: docker
      url: "https://registry.redhat.io"
      username: "{{ cdn_username }}"
      password: "{{ cdn_password }}"


setup_discovery: "true"
setup_infrastructure: "false"
setup_virtwho: "false"

# This can be fleshed out after we create the bootable image
# This will get updated on launch after bootstrapping the first server
# The startup service will call git pull to update the local repository
# Compute resources can only be built after the hypervisors are deployed.
compute_resources:
  - name: "VMware"
    type: "esx"
    controller_hostname: "your_vcentre_server_here"
    controller_username: "service_admin_name"
    controller_password: "service_password"   #Provide this as a variable in a private file - will be encryped.
    virtwho_username: "readonly_admin_name"
    virtwho_password: "virtwho_password"    #Provide this as a variable in a private file - will be encrypted.

  - name: "RHV"
    type: ovirt
    controller_hostname: "your_rhvm_server_here"
    controller_username: "service_admin_name"
    controller_password: "service_password"   #Provide this as a variable in a private file
    virtwho_username: "readonly_admin_name"
    virtwho_password: "virtwho_password"    #Provide this as a variable in a private file - will be encrypted.

