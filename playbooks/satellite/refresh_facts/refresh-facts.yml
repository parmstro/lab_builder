---
- name: call API from Satellite
  hosts: localhost
  gather_facts: no
  vars:
    satBaseURL: https://sat6.parmstrong.ca/api/v2/
    satOrgURL: "{{ satBaseURL }}organizations/"
    satLocURL: "{{ satBaseURL }}locations/"
    satHostGroupURL: "{{ satBaseURL }}hostgroups/"
    satComputeResourceURL: "{{ satBaseURL }}compute_resources/"
    satDiscoveredHostsURL: "{{ satBaseURL }}discovered_hosts/"
    satHostsURL: "{{ satBaseURL }}hosts/"
    satUser: admin
    satPass: "??Legend2013"
    satOrganizationName: RedHatCanada
    satLocationName: Hespeler

  tasks:

  - name: get the list of organizations 
    uri:
      url: "{{ satOrgURL }}"
      method: GET 
      user: "{{ satUser }}"
      password: "{{ satPass }}"
      force_basic_auth: yes 
      validate_certs: no
    register: orgdata

  - name: set the organization_id for "{{ satOrganizationName }}"
    set_fact: satOrganizationID={{ orgdata.json | json_query(satOrgIDQuery) }}
    vars:
      satOrgIDQuery: "results[?name=='{{ satOrganizationName }}'].id"

  - name: output the OrgID
    debug: msg={{ satOrganizationID }}

  - name: get the list of location
    uri:
      url: "{{ satLocURL }}"
      method: GET
      user: "{{ satUser }}"
      password: "{{ satPass }}"
      force_basic_auth: yes
      validate_certs: no
    register: locdata

  - name: get the list of discovered hosts      
    uri:
      url: "{{ satDiscoveredHostsURL }}"
      method: GET
      user: "{{ satUser }}"
      password: "{{ satPass }}"
      force_basic_auth: yes
      validate_certs: no
    register: discoveredhostsdata

  - debug: msg={{ discoveredhostsdata }}

  - name: list the discovered hosts available with the appropriate criteria
    set_fact: satDiscoveredHostsList={{ discoveredhostsdata.json | json_query(satDiscoveredHostsListQuery) }}
    vars:
      satDiscoveredHostsListQuery: "results[?location_name=='{{ satLocationName }}'].name"

  - debug: msg={{ item }}
    with_items: 
    - "{{ satDiscoveredHostsList }}"

  - name: Refresh the facts for each of the discovered hosts.
    uri:
      url: "{{ satDiscoveredHostsURL }}{{ item }}/refresh_facts"
      method: PUT
      user: "{{ satUser }}"
      password: "{{ satPass }}"
      force_basic_auth: yes
      validate_certs: no
      status_code: 200
      headers:
        Content-Type: application/json
        Accept: :application/json,version=2
    with_items:
    - "{{ satDiscoveredHostsList }}"


