---
# This is the lab_builder entry point
# This play will start the build_master and the foreman
# The builder definitions and phase definitions you provide
# will determine what is built.
# note, this playbook requires that you run prepare.yml first
#

- name: "Starting lab_builder" 
  hosts: build_master 
  gather_facts: true
  become: yes
  become_method: sudo

  vars_prompt:
    - name: "cdn_username_prompt"
      prompt: "Enter the username to log into the Red Hat CDN for container images (will be encrypted)"
      default: ""
      private: yes
    - name: "cdn_password_prompt"
      prompt: "Enter the password to log into the Red Hat CDN for container images (will be encrypted)"
      default: ""
      private: yes
    - name: "root_password"
      prompt: "Enter the desired administrative password for the lab (will be encrypted)"
      default: "#M@k31t5omeThing[0mpl3x"
      private: yes

  vars:
    idm_variable_file: "{{ playbook_dir }}/vars/idm_vars.yml"
    sat_variable_file: "{{ playbook_dir }}/vars/sat_vars.yml"
    phase_definition_file: "{{ playbook_dir }}/vars/phase_definition.yml"
    password_config_file: "{{ playbook_dir }}/vars/password_vars.yml"
    encrypted_passwords_file: "{{ playbook_dir }}/vars/encrypted_password.yml"
    locks_dir: "{{ playbook_dir }}/locks"
    bootstrap_role: "none"

  tasks:

  - name: "Ensuring lock dir"
    file:
      path: "{{ locks_dir }}"
      state: directory

  - name: "Has prepare been run"
    stat:
      path: "{{ playbook_dir }}/bootstrap_config"
    register: bc

  - fail:
      msg: "Bootstrap configuration note found. Please run ansible-playbook prepare.yml and reboot before running site.yml"
    when: "bc.stat.exists == false"

  - name: "Reading bootstrap configuration"
    include_vars:
      file: "{{ playbook_dir }}/bootstrap_config"

  - name: "Starting lab_builder for localhost {{ bootstrap_fqdn }} in role {{ bootstrap_role }}"
    include_vars: 
      file: "{{ phase_definition_file }}"
    
  - name: "Including specified password generation file {{ password_config_file }}"
    include_vars: 
      file: "{{ password_config_file }}"

  - name: "Generate passwords"
    include_tasks: site_generate_passwords.yml

  - name: "Include encrypted passwords"
    include_vars:
      file: "{{ output_file }}"

# TODO: Put sanity_check code here, steal it from openshift
# TODO: Lock variable files exclusively, these are very long processes
#       where it would easily be possible for these to change 
#       underneath us. We don't want that.

  - name: "PHASE 1 - BEGIN bootstrap build_master"
    file:
      path: "{{ locks_dir }}/bootstrap_begin"
      state: touch

  - include_vars:
      file: "{{ idm_variable_file }}"

  - include_role:
       name: build_master

- name: "PHASE 1 - BEGIN bootstrap foreman"
  hosts: foreman

  tasks:
  
  - include_vars:
      file: "{{ sat_variable_file }}"

  - include_role:
      name: foreman_pre
  - include_role:
      name: foreman
  - include_role:
      name: foreman_post

  - name: "Wait for build_master"
    wait_for:
      path: "{{ locks_dir }}/build_master_complete"

  - name: "Wait for foreman"
    wait_for:
      path: "{{ locks_dir }}/foreman_complete"

  - name: "END PHASE 1 - bootstrap complete"
    file:
      path: "{{ locks_dir }}/bootstrap_complete"
      state: touch

