---
# These tasks configure a bootstrap host with a network.
# as we are bootstrapping, we will always apply to localhost.
#
- name: "Generating a connection"
  set_fact:
    bootstrap_con_name: "bootstrap"

- name: "Prepare the configuration data"
  set_fact:
    bootstrap_mask: "{{ bootstrap_ip }}/{{ bootstrap_netmask }}"

- set_fact:
    bootstrap_prefix: "{{ bootstrap_mask | ipaddr('prefix') }}"

- set_fact:
    bootstrap_address: "{{ bootstrap_ip }}/{{ bootstrap_prefix }}"

- set_fact:
    bootstrap_adapter: "{{ ansible_facts.interfaces | select('match', '^(e)+') | list | first }}"

- set_fact:
    bootstrap_dns: "{{ bootstrap_ip }}"

- set_fact:
    bootstrap_dns: "{{ remote_bootstrap_ip }}"
  when: "bootstrap_role ==  'foreman'"

- name: "Set the fqdn for this host: {{ bootstrap_fqdn }}"
  command: "hostnamectl set-hostname {{ bootstrap_fqdn }}"

- name: "Clean up any existing bootstrap network connections for: {{ bootstrap_con_name }}"
  command: "nmcli con delete {{ bootstrap_con_name }}"
  ignore_errors: true

- name: "Reset the network configuration for: {{ bootstrap_con_name }}"
  command: "nmcli con add save yes con-name {{ bootstrap_con_name }} ifname {{ bootstrap_adapter }}  type ethernet ip4  {{ bootstrap_address }} gw4 {{ bootstrap_gateway }} ipv4.dns '{{ bootstrap_dns }} 8.8.8.8'"

- name: "Bring the connection {{ bootstrap_con_name }} online"
  command: "nmcli con up {{ bootstrap_con_name }}"

- name: "Ensure that we refresh the system facts"
  setup:

- name: "Test connectivity to our FQDN"
  wait_for:
    host: "{{ bootstrap_fqdn }}"
    port: 22
    timeout: 10

- debug:
    msg: "Can connect to {{ bootstrap_fqdn }} continuing..."

- name: "Test Connectivity to Google"
  wait_for:
    host: 8.8.8.8
    port: 53
    timeout: 10

- debug:
    msg: "Can reach the internet continuing..."

- debug:
    msg: "Building system {{ ansible_fqdn }}"


