---
# This set of tasks generates the IdM certs for the host using IdM
# The host is required to be an IdM client first
#

- name: Create the directory to contain the certificates
  file:
    state: directory
    path: /etc/ipa/private/

- name: Initialize the admin user
  command: "echo {{ ipa_admin_password }} | kinit admin"

- name: Generate a private key
  openssl_privatekey:
    path: "{{ server_prv_file }}"
    passphrase: "{{ rsa_key_pass }}"
    cipher: "DES3"
    force: yes

- name: Remove any exising CSR
  file:
    path: "{{ server_csr_file }}"
    state: absent

- name: Generate the CSR with subjectAltNames set
  openssl_csr:
    path: "{{ server_csr_file }}"
    privatekey_path: "{{ server_prv_file }}"
    privatekey_passphrase: "{{ rsa_key_pass }}"
    state: present
    common_name: "{{ ansible_nodename }}"
    subject_alt_name: "DNS:{{ ansible_nodename }}"
    organization_name: "{{ ipa_organization_name }}"
    organizational_unit_name: "{{ ipa_ou_name }}"
    locality_name: "{{ ipa_locality_name }}"
    state_or_province_name: "{{ ipa_prov_name }}"
    country_name: "{{ ipa_country_name }}"
    email_address: "admin@{{ ipa_domain }}"

- name: Determine if the service exists
  command: "ipa service-show {{ service_type }}/{{ ansible_nodename }}"
  register: result

- set_fact:
    service_exists: "{{ result.stdout_lines.1 | regex_search('service not found') }}"

- name: Add the service to IdM/FreeIPA
  command: "ipa service-add {{ service_type }}/{{ ansible_nodename }}"
  when: service_exists != ""

- name: Request the certificate
  command: "ipa cert-request --add --principal={{ service_type }}/{{ ansible_nodename }} {{ server_csr_file }}"
  register: result

- name: Get the certificate serial number
  set_fact: 
    serial_number: "{{ result.stdout_lines.7 | regex_replace('  Serial number: ', '') }}"

- debug:
    msg: "{{ serial_number }}"

- name: Retrieve the certificate
  command: "ipa cert-show --out={{ server_crt_file }} {{ serial_number }}"

- lineinfile:
    path: "{{ server_certs_dir }}.passin.txt"
    line: "{{ rsa_key_pass }}"
    create: yes
    owner: root
    group: root
    mode: 0600
    state: present
    
- name: Generate a key for the service
  command: "openssl rsa -in {{ server_prv_file }} -out {{ server_key_file }} -passin file:{{ server_certs_dir }}.passin.txt"




